{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_hardware-apis_networking-diag_tutorials_ethernetdoip-object.txt"}, "page_content": "EthernetDoIP Object\nDiagnostics over IP is a layer that is placed below UDS diag, and above socket \nadaptor.\nThis is defined in ISO 14229-1/ISO 14229-2/ISO 14229-5/ISO 13400-2, also for \nreference, Section 7 in \"AUTOSAR SWS DiagnosticOverIP\" in AutoSAR site is useful.\nEthernetDoIP Layout\nDoIP HeaderProtocol Id (1  Byte)Protocol Id Inverted (1  Byte)Payload Type (2  \nBytes)0x0001: Vehicle Identification request message0x0002: Vehicle identification \nrequest0x0003: Vehicle identification request message with VIN0x0005(TCP): Routing \nactivation request0x0008(TCP): Alive Check response0x4001: DoIP entity status \nrequest0x4003: Diagnostic power mode information request0x8001(TCP): Diagnostic \nmessagePayload Length (4  Bytes)PayloadThe Payload is defined in \"AUTOSAR SWS \nDiagnosticOverIP\" for each Payload Type defined above.If the Payload Type is \n\"0x8001: Diagnostic message\", then the payload will be UDS diagnostics message\nDoIP HeaderProtocol Id (1  Byte)Protocol Id Inverted (1  Byte)Payload Type (2  \nBytes)0x0001: Vehicle Identification request message0x0002: Vehicle identification \nrequest0x0003: Vehicle identification request message with VIN0x0005(TCP): Routing \nactivation request0x0008(TCP): Alive Check response0x4001: DoIP entity status \nrequest0x4003: Diagnostic power mode information request0x8001(TCP): Diagnostic \nmessagePayload Length (4  Bytes)\nDoIP Header\nProtocol Id (1  Byte)\nProtocol Id (1  Byte)\nProtocol Id Inverted (1  Byte)\nProtocol Id Inverted (1  Byte)\nPayload Type (2  Bytes)0x0001: Vehicle Identification request message0x0002: Vehicle\nidentification request0x0003: Vehicle identification request message with \nVIN0x0005(TCP): Routing activation request0x0008(TCP): Alive Check response0x4001: \nDoIP entity status request0x4003: Diagnostic power mode information request\nPayload Type (2  Bytes)\n0x0001: Vehicle Identification request message\n0x0001: Vehicle Identification request message\n0x0002: Vehicle identification request\n0x0002: Vehicle identification request\n0x0003: Vehicle identification request message with VIN\n0x0003: Vehicle identification request message with VIN\n0x0005(TCP): Routing activation request\n0x0005(TCP): Routing activation request\n0x0008(TCP): Alive Check response\n0x0008(TCP): Alive Check response\n0x4001: DoIP entity status request\n0x4001: DoIP entity status request\n0x4003: Diagnostic power mode information request\n0x4003: Diagnostic power mode information request\n0x8001(TCP): Diagnostic message\n0x8001(TCP): Diagnostic message\nPayload Length (4  Bytes)\nPayload Length (4  Bytes)\nPayloadThe Payload is defined in \"AUTOSAR SWS DiagnosticOverIP\" for each Payload \nType defined above.\nPayload\nThe Payload is defined in \"AUTOSAR SWS DiagnosticOverIP\" for each Payload Type \ndefined above.\nThe Payload is defined in \"AUTOSAR SWS DiagnosticOverIP\" for each Payload Type \ndefined above.\nIf the Payload Type is \"0x8001: Diagnostic message\", then the payload will be UDS \ndiagnostics message\nIf the Payload Type is \"0x8001: Diagnostic message\", then the payload will be UDS \ndiagnostics message\nTwo Sets of Diag Buffers\nFirmware contains two diag tx buffers\nDiagnostics Tx Buffer: saves the UDS diag tx frameDoIP Tx Buffer:  saves the DoIP \nframe (DoIP Header + Payload)If Payload Type in the DoIP header is 0x8001, then the \nPayload will be UDS diag tx frame\nDiagnostics Tx Buffer: saves the UDS diag tx frame\nDiagnostics Tx Buffer: saves the UDS diag tx frame\nDoIP Tx Buffer:  saves the DoIP frame (DoIP Header + Payload)If Payload Type in the \nDoIP header is 0x8001, then the Payload will be UDS diag tx frame\nDoIP Tx Buffer:  saves the DoIP frame (DoIP Header + Payload)\nIf Payload Type in the DoIP header is 0x8001, then the Payload will be UDS diag tx \nframe\nIf Payload Type in the DoIP header is 0x8001, then the Payload will be UDS diag tx \nframe\nSame thing applies for rx buffers.\nFirmware has two modes\nWhen use the call: objEthernetDoIP().afcChooseBuffers(Diagnostics);All the Send \nfunctions (Send - Prepare - Modify Prepared - ...etc) and The test functions are \ndealing with the UDS diag request/response.Upon send, the firmware automatically \ncreate the DoIP frame from the UDS Diagnostics Frame, and send it.Upon receive, DoIP\nbuffer is filled with DoIP frame, then the Diagnostics rx buffer is filled with the \ncontained Diagnostics message if Payload Type = 0x8001When use the call: \nobjEthernetDoIP().afcChooseBuffers(DoIP);All the Send functions (Send - Prepare - \nModify Prepared - ...etc) and The test functions are dealing with the DoIP \nrequest/response.Upon send, the firmware send the DoIP buffer.Upon receive, DoIP \nbuffer is filled with DoIP frame, then the Diagnostics rx buffer is filled with the \ncontained Diagnostics message if Payload Type = 0x8001\nWhen use the call: objEthernetDoIP().afcChooseBuffers(Diagnostics);All the Send \nfunctions (Send - Prepare - Modify Prepared - ...etc) and The test functions are \ndealing with the UDS diag request/response.Upon send, the firmware automatically \ncreate the DoIP frame from the UDS Diagnostics Frame, and send it.Upon receive, DoIP\nbuffer is filled with DoIP frame, then the Diagnostics rx buffer is filled with the \ncontained Diagnostics message if Payload Type = 0x8001\nWhen use the call: objEthernetDoIP().afcChooseBuffers(Diagnostics);\nAll the Send functions (Send - Prepare - Modify Prepared - ...etc) and The test \nfunctions are dealing with the UDS diag request/response.\nAll the Send functions (Send - Prepare - Modify Prepared - ...etc) and The test \nfunctions are dealing with the UDS diag request/response.\nUpon send, the firmware automatically create the DoIP frame from the UDS Diagnostics\nFrame, and send it.\nUpon send, the firmware automatically create the DoIP frame from the UDS Diagnostics\nFrame, and send it.\nUpon receive, DoIP buffer is filled with DoIP frame, then the Diagnostics rx buffer \nis filled with the contained Diagnostics message if Payload Type = 0x8001\nUpon receive, DoIP buffer is filled with DoIP frame, then the Diagnostics rx buffer \nis filled with the contained Diagnostics message if Payload Type = 0x8001\nWhen use the call: objEthernetDoIP().afcChooseBuffers(DoIP);All the Send functions \n(Send - Prepare - Modify Prepared - ...etc) and The test functions are dealing with \nthe DoIP request/response.Upon send, the firmware send the DoIP buffer.Upon receive,\nDoIP buffer is filled with DoIP frame, then the Diagnostics rx buffer is filled with\nthe contained Diagnostics message if Payload Type = 0x8001\nWhen use the call: objEthernetDoIP().afcChooseBuffers(DoIP);\nAll the Send functions (Send - Prepare - Modify Prepared - ...etc) and The test \nfunctions are dealing with the DoIP request/response.\nAll the Send functions (Send - Prepare - Modify Prepared - ...etc) and The test \nfunctions are dealing with the DoIP request/response.\nUpon send, the firmware send the DoIP buffer.\nUpon send, the firmware send the DoIP buffer.\nUpon receive, DoIP buffer is filled with DoIP frame, then the Diagnostics rx buffer \nis filled with the contained Diagnostics message if Payload Type = 0x8001\nUpon receive, DoIP buffer is filled with DoIP frame, then the Diagnostics rx buffer \nis filled with the contained Diagnostics message if Payload Type = 0x8001\nNotes\nThe first TCP request sent shall be \"Routing activation request\", otherwise, ECU \nwill RST the tcp connection in two seconds.For Baseline 14, this worked as Routing \nactivation request:02 FD 00 05 00 00 00 07 0E F8 00 00 00 00 00\nThe first TCP request sent shall be \"Routing activation request\", otherwise, ECU \nwill RST the tcp connection in two seconds.For Baseline 14, this worked as Routing \nactivation request:02 FD 00 05 00 00 00 07 0E F8 00 00 00 00 00\nThe first TCP request sent shall be \"Routing activation request\", otherwise, ECU \nwill RST the tcp connection in two seconds.\nFor Baseline 14, this worked as Routing activation request:02 FD 00 05 00 00 00 07 \n0E F8 00 00 00 00 00\nFor Baseline 14, this worked as Routing activation request:\n02 FD 00 05 00 00 00 07 0E F8 00 00 00 00 00\n02 FD 00 05 00 00 00 07 0E F8 00 00 00 00 00", "type": "Document"}}