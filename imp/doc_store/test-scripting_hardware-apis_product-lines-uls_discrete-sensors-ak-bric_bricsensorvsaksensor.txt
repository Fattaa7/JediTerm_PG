{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_hardware-apis_product-lines-uls_discrete-sensors-ak-bric_bricsensorvsaksensor.txt"}, "page_content": "BRIC Sensor vs Ak Sensor\nPost date: Jun 29, 2016 11:20:27 AM\nHere is the meaning of the status bits in Castle:\nAk Sensors Logic (bitwise)\n00 - last state or last programming not ok, default threshold active\n01 - last state or last programming not ok, last valid threshold active\n10 - last state or last programming ok, extended range\n11 - last state or last programming ok, normal range\nCastle is setting the verify answer according to the following conditions, if \nprogsim is set to 0 the verify is defined by script, possible is 0,1,2,3\nif progsim is set to 1, then verify is derived from measurement range programming \nfrom ECU, when ECU hast programmed extended range the verify answer was 2, when \nnormal range verify was 3 (0 and 1 was set only when a CRC error in threshold \nprogramming was detected)\nBric Sensor Logic\nWhen Progsim is 1, then the verify answer should be 6 when received crc was ok and 4\nwhen received crc was not ok (state_rd_statresp_crc),state_rd_statresp_fixshouldn't \nbe considered anymore.\nWhen progsim is 0 the user can still set verify answer 0,1,2,3, and transducer \noutput voltage bit is set to 1 (which means ok condition, so means that this bit is \nnever set to 0 during Software validation.\nFor Normal Operation\nMake sure when you select ProgSim = 0, then Response = 2 in normal case without \nerrors in sensor.\n0 means --> No Noise detected & last threshold incorrect (received 4)\n1 means --> Noise is detected & last threshold incorrect (received 5)\n2 means --> No Noise detected & last threshold correct (received 6)\n3 means --> Noise detected & last threshold correct (received 7)", "type": "Document"}}