{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "product-lines_camera-systems_cameras-pip-design-considerations.txt"}, "page_content": "Cameras PIP Design Considerations\nWhile designing a new PIP to handle a new project`s / variant`s cameras validation \nactivities, please make sure to cover the following considerations to produce a \nreliable PIP interface:\nFirst of all, you have to locate all crucial and most important pins. Which would be\nthe pins that carry highest frequencies.Here is a list of all likely pins to carry \nsuch high frequencies:4 Pclk output pins from FPGA to 4 serializers.Pclk input to \nFPGA from PIP deserializer(s).Most significant pins in the color component datatype \nof video data pins.i.e if the deserializer is producing 24-pin data interface for \nRGB888 color component, then we have to secure the following pins:D23, D22, D21, \nD15, D14, D13, D7, D6, D5if the deserializer is producing 8-pin data interface for \nYUV422 color component, then we have to secure the following pins:D7, D6, D5\nFirst of all, you have to locate all crucial and most important pins. Which would be\nthe pins that carry highest frequencies.Here is a list of all likely pins to carry \nsuch high frequencies:4 Pclk output pins from FPGA to 4 serializers.Pclk input to \nFPGA from PIP deserializer(s).Most significant pins in the color component datatype \nof video data pins.i.e if the deserializer is producing 24-pin data interface for \nRGB888 color component, then we have to secure the following pins:D23, D22, D21, \nD15, D14, D13, D7, D6, D5if the deserializer is producing 8-pin data interface for \nYUV422 color component, then we have to secure the following pins:D7, D6, D5\nFirst of all, you have to locate all crucial and most important pins. Which would be\nthe pins that carry highest frequencies.\nHere is a list of all likely pins to carry such high frequencies:4 Pclk output pins \nfrom FPGA to 4 serializers.Pclk input to FPGA from PIP deserializer(s).Most \nsignificant pins in the color component datatype of video data pins.i.e if the \ndeserializer is producing 24-pin data interface for RGB888 color component, then we \nhave to secure the following pins:D23, D22, D21, D15, D14, D13, D7, D6, D5if the \ndeserializer is producing 8-pin data interface for YUV422 color component, then we \nhave to secure the following pins:D7, D6, D5\nHere is a list of all likely pins to carry such high frequencies:\n4 Pclk output pins from FPGA to 4 serializers.\n4 Pclk output pins from FPGA to 4 serializers.\nPclk input to FPGA from PIP deserializer(s).\nPclk input to FPGA from PIP deserializer(s).\nMost significant pins in the color component datatype of video data pins.i.e if the \ndeserializer is producing 24-pin data interface for RGB888 color component, then we \nhave to secure the following pins:D23, D22, D21, D15, D14, D13, D7, D6, D5if the \ndeserializer is producing 8-pin data interface for YUV422 color component, then we \nhave to secure the following pins:D7, D6, D5\nMost significant pins in the color component datatype of video data pins.\ni.e if the deserializer is producing 24-pin data interface for RGB888 color \ncomponent, then we have to secure the following pins:D23, D22, D21, D15, D14, D13, \nD7, D6, D5\ni.e if the deserializer is producing 24-pin data interface for RGB888 color \ncomponent, then we have to secure the following pins:\nD23, D22, D21, D15, D14, D13, D7, D6, D5\nD23, D22, D21, D15, D14, D13, D7, D6, D5\nif the deserializer is producing 8-pin data interface for YUV422 color component, \nthen we have to secure the following pins:D7, D6, D5\nif the deserializer is producing 8-pin data interface for YUV422 color component, \nthen we have to secure the following pins:\nD7, D6, D5\nD7, D6, D5\nSuch important pins are better be routed to Gclk (Global Clock)netsin FPGA.Beware to\nnot use conflicting Gclk pins.\nSuch important pins are better be routed to Gclk (Global Clock)netsin FPGA.\nBeware to not use conflicting Gclk pins.\nBeware to not use conflicting Gclk pins.\nBeware to not use conflicting Gclk pins.\nA good practice in designing a new PIP (specially cameras PIP) is to reuse \nschematics parts from previous working PIPs (if there is any similarity in between) \nto eliminate HW issues.If there is a crystal oscillator, it is crucial to leave a \nfabrication note to not perform any Ultraviolet sweeping to the PIP, as this would \ndamage / break down the oscillator.If the design includes a HSD Rosenberger \nconnector, beware to validate the correct pinout mapping with the customer as it \nvaries from a product to another.For example, Din+/- may not be routed from the ECU \nside to the standard pins 1/3\nA good practice in designing a new PIP (specially cameras PIP) is to reuse \nschematics parts from previous working PIPs (if there is any similarity in between) \nto eliminate HW issues.\nA good practice in designing a new PIP (specially cameras PIP) is to reuse \nschematics parts from previous working PIPs (if there is any similarity in between) \nto eliminate HW issues.\nIf there is a crystal oscillator, it is crucial to leave a fabrication note to not \nperform any Ultraviolet sweeping to the PIP, as this would damage / break down the \noscillator.\nIf there is a crystal oscillator, it is crucial to leave a fabrication note to not \nperform any Ultraviolet sweeping to the PIP, as this would damage / break down the \noscillator.\nIf the design includes a HSD Rosenberger connector, beware to validate the correct \npinout mapping with the customer as it varies from a product to another.For example,\nDin+/- may not be routed from the ECU side to the standard pins 1/3\nIf the design includes a HSD Rosenberger connector, beware to validate the correct \npinout mapping with the customer as it varies from a product to another.\nFor example, Din+/- may not be routed from the ECU side to the standard pins 1/3\nFor example, Din+/- may not be routed from the ECU side to the standard pins 1/3\nMake sure to hard configure video chips with unique I2C addresses to avoid address \nconflict.For example, if we have the same Deserializer / Serializer chip replicated \nin PIP, we then have to configure each chip with a unique resistance setting to \nensure unique I2C address for each.If there is a hard wired configuration to the \nvideo decode / encode chip (SerDes) in terms of clock polarity to latch pixel data \non (+ve / -ve) Pclk, it is mandatory to choose latching pixel data on +ve Pclk \nedge.For example, in TFP401A-Q1 HDMI receiver, there is a hard wire configuration of\nthe Pclk polarity \"OCK_INV\" pin.\nMake sure to hard configure video chips with unique I2C addresses to avoid address \nconflict.For example, if we have the same Deserializer / Serializer chip replicated \nin PIP, we then have to configure each chip with a unique resistance setting to \nensure unique I2C address for each.\nMake sure to hard configure video chips with unique I2C addresses to avoid address \nconflict.\nFor example, if we have the same Deserializer / Serializer chip replicated in PIP, \nwe then have to configure each chip with a unique resistance setting to ensure \nunique I2C address for each.\nFor example, if we have the same Deserializer / Serializer chip replicated in PIP, \nwe then have to configure each chip with a unique resistance setting to ensure \nunique I2C address for each.\nIf there is a hard wired configuration to the video decode / encode chip (SerDes) in\nterms of clock polarity to latch pixel data on (+ve / -ve) Pclk, it is mandatory to \nchoose latching pixel data on +ve Pclk edge.For example, in TFP401A-Q1 HDMI \nreceiver, there is a hard wire configuration of the Pclk polarity \"OCK_INV\" pin.\nIf there is a hard wired configuration to the video decode / encode chip (SerDes) in\nterms of clock polarity to latch pixel data on (+ve / -ve) Pclk, it is mandatory to \nchoose latching pixel data on +ve Pclk edge.\nFor example, in TFP401A-Q1 HDMI receiver, there is a hard wire configuration of the \nPclk polarity \"OCK_INV\" pin.\nFor example, in TFP401A-Q1 HDMI receiver, there is a hard wire configuration of the \nPclk polarity \"OCK_INV\" pin.\nPlacing SerDes video chips in PIP is mandated to be very close to the video \nconnector to minimize GMSL / FPD tracks in PIP.If the ECU is using MIPI CSI to \nencode video data between deserializer and SOC, this does not require our FPGA to \nsend video data CSI encoded to the PIP serializer. We still can output LVCMOS \nparallel video to the serializer.\nPlacing SerDes video chips in PIP is mandated to be very close to the video \nconnector to minimize GMSL / FPD tracks in PIP.\nPlacing SerDes video chips in PIP is mandated to be very close to the video \nconnector to minimize GMSL / FPD tracks in PIP.\nIf the ECU is using MIPI CSI to encode video data between deserializer and SOC, this\ndoes not require our FPGA to send video data CSI encoded to the PIP serializer. We \nstill can output LVCMOS parallel video to the serializer.\nIf the ECU is using MIPI CSI to encode video data between deserializer and SOC, this\ndoes not require our FPGA to send video data CSI encoded to the PIP serializer. We \nstill can output LVCMOS parallel video to the serializer.", "type": "Document"}}