{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "tools_cre_toolchain_toolchain-structure-castle-users.txt"}, "page_content": "Toolchain Structure\n(Castle Users)\nPreviously, Castle 5 Toolchain was considered as only one main component including \nboth UI and Engine logic (exported.castle.testenv)\nCastle 6 Test Environment Toolchain divides the old one to 2 main components \n(backward compatible to Castle 5)\n1- CRE (Castle Run-Time Engine)\n2- CTE (Castle Test Environment UI)\nCRE launches first as a server, then CTE launches and connects to CRE via gRPC as \nshown below\nHow to release / runinUserMode ?\nImport Releases:Modify castleArtifacts in build.gradle as shown below [Add cre2.+and\nUpgrade castle.testenv.appl to3.+]ORUse exportCre.bat or exportCte.bat according to \nthe modified plugin(s) as described inCastle Devs Guideand then copy the binaries \nfrom exported.tools to the user project [exported.castle.cre + \nexported.castle.testenv]\nImport Releases:\nModify castleArtifacts in build.gradle as shown below [Add cre2.+and Upgrade \ncastle.testenv.appl to3.+]\nModify castleArtifacts in build.gradle as shown below [Add cre2.+and Upgrade \ncastle.testenv.appl to3.+]\nORUse exportCre.bat or exportCte.bat according to the modified plugin(s) as \ndescribed inCastle Devs Guideand then copy the binaries from exported.tools to the \nuser project [exported.castle.cre + exported.castle.testenv]\nORUse exportCre.bat or exportCte.bat according to the modified plugin(s) as \ndescribed inCastle Devs Guideand then copy the binaries from exported.tools to the \nuser project [exported.castle.cre + exported.castle.testenv]\nUpgrade java to16.+in build.gradle\nUpgrade java to16.+in build.gradle\nUpgradedependencies in buildscript taskto2.+ instead of 0.+in build.gradle \n(com.valeo.castle5:gradle.castle.artifacts:2.+)\nUpgradedependencies in buildscript taskto2.+ instead of 0.+in build.gradle \n(com.valeo.castle5:gradle.castle.artifacts:2.+)\nModify.classpath / build.gradle dependencies:Modify any castle imported plugin to \ncre.jar (e.g. exported.castle.testenv/../plugins/castle.util_1.0.0.released.jar => \nexported.castle.cre/cre.jar)Same applies for stdlib => shall be \nexported.stdlib/stdlib.jar\nModify.classpath / build.gradle dependencies:\nModify any castle imported plugin to cre.jar (e.g. \nexported.castle.testenv/../plugins/castle.util_1.0.0.released.jar => \nexported.castle.cre/cre.jar)\nModify any castle imported plugin to cre.jar (e.g. \nexported.castle.testenv/../plugins/castle.util_1.0.0.released.jar => \nexported.castle.cre/cre.jar)\nSame applies for stdlib => shall be exported.stdlib/stdlib.jar\nSame applies for stdlib => shall be exported.stdlib/stdlib.jar\nChange the_Sysgen.cmdto \"tools\\java\\bin\\java.exe -Xmx4G -jar \nexported.castle.cre\\cre.jar -local -runSysgen -appl-only %*\"\nChange the_Sysgen.cmdto \"tools\\java\\bin\\java.exe -Xmx4G -jar \nexported.castle.cre\\cre.jar -local -runSysgen -appl-only %*\"\nUpgrade gradle to version7.3.3in tools/gradle/wrapper/gradle-wrapper.properties\nUpgrade gradle to version7.3.3in tools/gradle/wrapper/gradle-wrapper.properties\nLaunch the project normally as before\nLaunch the project normally as before\nString Templates [Sysgen]In case you are still using firmware from old 1_Castle \n2.3x.+, you will need to copy the compatible string templates in order for sysgen to\npassCheckout the corresponding hash in old 1_Castle or get the corresponding tag \nfrom core ALM (e.g.rel_34)Then go to \n/castle.testenv.sysgen/src/castle/testenv/sysgen/generator/mc5Copy these 4 files \ntoconfig/data/stgin your user project (create stg directory if not \nfound)intf.stgmsg_protos.stgmtapi_c.stgmtapi_h.stg\nString Templates [Sysgen]\nIn case you are still using firmware from old 1_Castle 2.3x.+, you will need to copy\nthe compatible string templates in order for sysgen to passCheckout the \ncorresponding hash in old 1_Castle or get the corresponding tag from core ALM \n(e.g.rel_34)Then go to \n/castle.testenv.sysgen/src/castle/testenv/sysgen/generator/mc5Copy these 4 files \ntoconfig/data/stgin your user project (create stg directory if not \nfound)intf.stgmsg_protos.stgmtapi_c.stgmtapi_h.stg\nIn case you are still using firmware from old 1_Castle 2.3x.+, you will need to copy\nthe compatible string templates in order for sysgen to pass\nCheckout the corresponding hash in old 1_Castle or get the corresponding tag from \ncore ALM (e.g.rel_34)\nCheckout the corresponding hash in old 1_Castle or get the corresponding tag from \ncore ALM (e.g.rel_34)\nThen go to /castle.testenv.sysgen/src/castle/testenv/sysgen/generator/mc5\nThen go to /castle.testenv.sysgen/src/castle/testenv/sysgen/generator/mc5\nCopy these 4 files toconfig/data/stgin your user project (create stg directory if \nnot found)intf.stgmsg_protos.stgmtapi_c.stgmtapi_h.stg\nCopy these 4 files toconfig/data/stgin your user project (create stg directory if \nnot found)\nintf.stg\nintf.stg\nmsg_protos.stg\nmsg_protos.stg\nmtapi_c.stg\nmtapi_c.stg\nmtapi_h.stg\nmtapi_h.stg", "type": "Document"}}