{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "tools_third-party-tools_vector_canoe_communicationwithcanoe.txt"}, "page_content": "Communication With CANoe\nPost date: Jul 31, 2017 7:16:41 AM\nThere are several ways to communicate with \"CANoe\". The following ways will be \ndiscussed:\nFDXCOM Interface.Net ApisFMUASAM XIL APIs\nFDX\nFDX\nCOM Interface\nCOM Interface\n.Net Apis\n.Net Apis\nFMU\nFMU\nASAM XIL APIs\nASAM XIL APIs\nFDX (Fast Data eXchange)\nA protocol over Ethernet (UDP - IPv4)\nA protocol over Ethernet (UDP - IPv4)\nCommunication Between CANoe and other systems:Other application on same \nPCApplication on other PCHIL System\nCommunication Between CANoe and other systems:\nOther application on same PC\nOther application on same PC\nApplication on other PC\nApplication on other PC\nHIL System\nHIL System\nAbilities:Read/Write: System variables, Environment variables, bus signalsSend \nControl Commands: (ex: start/stop Measurements)Receive Status information\nAbilities:\nRead/Write: System variables, Environment variables, bus signals\nRead/Write: System variables, Environment variables, bus signals\nSend Control Commands: (ex: start/stop Measurements)\nSend Control Commands: (ex: start/stop Measurements)\nReceive Status information\nReceive Status information\nReal Time?CANoeIf on PC >> Not real timeIf on VN89xx or VT RT Module >> Can we \ncommunicate via fdx directly between Other system and CANoe on VN89xx or VT? >> If \nyes, then Real TimeOther SystemDepends on the system\nReal Time?\nCANoeIf on PC >> Not real timeIf on VN89xx or VT RT Module >> Can we communicate via\nfdx directly between Other system and CANoe on VN89xx or VT? >> If yes, then Real \nTime\nCANoe\nIf on PC >> Not real time\nIf on PC >> Not real time\nIf on VN89xx or VT RT Module >> Can we communicate via fdx directly between Other \nsystem and CANoe on VN89xx or VT? >> If yes, then Real Time\nIf on VN89xx or VT RT Module >> Can we communicate via fdx directly between Other \nsystem and CANoe on VN89xx or VT? >> If yes, then Real Time\nOther SystemDepends on the system\nOther System\nDepends on the system\nDepends on the system\nCOM Interface\nImplemented Libraries in:VBScriptJScriptPerlVBADelphiC/C++.Net (VB or C#)\nImplemented Libraries in:\nVBScript\nVBScript\nJScript\nJScript\nPerl\nPerl\nVBA\nVBA\nDelphi\nDelphi\nC/C++\nC/C++\n.Net (VB or C#)\n.Net (VB or C#)\nControl CANoe from external programAnother program in same PCApplication on other PC\nControl CANoe from external program\nAnother program in same PC\nAnother program in same PC\nApplication on other PC\nApplication on other PC\nAbilities:A lot of features in CANoe can be controlled:BusCAPLConfiguration \n(Measurement Setup - Simulation Setup - ...etc)MeasurementUIOthers\nAbilities:\nA lot of features in CANoe can be controlled:BusCAPLConfiguration (Measurement Setup\n- Simulation Setup - ...etc)MeasurementUIOthers\nA lot of features in CANoe can be controlled:\nBus\nBus\nCAPL\nCAPL\nConfiguration (Measurement Setup - Simulation Setup - ...etc)\nConfiguration (Measurement Setup - Simulation Setup - ...etc)\nMeasurement\nMeasurement\nUI\nUI\nOthers\nOthers\nReal Time?CANoeIf on PC >> Not real timeIf on VN89xx or VT RT Module >> Can we \nsomehow download the external program on this hardware? >> If yes, then real \ntime.Other Systemsame as CANoe\nReal Time?\nCANoeIf on PC >> Not real timeIf on VN89xx or VT RT Module >> Can we somehow \ndownload the external program on this hardware? >> If yes, then real time.\nCANoe\nIf on PC >> Not real time\nIf on PC >> Not real time\nIf on VN89xx or VT RT Module >> Can we somehow download the external program on this\nhardware? >> If yes, then real time.\nIf on VN89xx or VT RT Module >> Can we somehow download the external program on this\nhardware? >> If yes, then real time.\nOther Systemsame as CANoe\nOther System\nsame as CANoe\nsame as CANoe\nFor more info, CANoe Help > Technical References > COM Interface\n.Net API\n.Net DLLs\n.Net DLLs\nProgramming CANoe (simulated nodes, test modules, test cases, test libraries, \nsnippets)integrate CANoe .Net DLLs into bigger .Net project, export this project as \na DLL.This big DLL, can be executed from CANoe (simulated nodes, test modules, test \ncases, test libraries, snippets)Using the VT Real Time Module, or VN89xx, you can \nrun these nodes on the hardware instead of PC.\nProgramming CANoe (simulated nodes, test modules, test cases, test libraries, \nsnippets)\nintegrate CANoe .Net DLLs into bigger .Net project, export this project as a DLL.\nintegrate CANoe .Net DLLs into bigger .Net project, export this project as a DLL.\nThis big DLL, can be executed from CANoe (simulated nodes, test modules, test cases,\ntest libraries, snippets)\nThis big DLL, can be executed from CANoe (simulated nodes, test modules, test cases,\ntest libraries, snippets)\nUsing the VT Real Time Module, or VN89xx, you can run these nodes on the hardware \ninstead of PC.\nUsing the VT Real Time Module, or VN89xx, you can run these nodes on the hardware \ninstead of PC.\nAbilities to control Many things:DiagnosticsMeasurementsTimersFrames - Signals - \nSystem Vars - Environment VarsOthers\nAbilities to control Many things:\nDiagnostics\nDiagnostics\nMeasurements\nMeasurements\nTimers\nTimers\nFrames - Signals - System Vars - Environment Vars\nFrames - Signals - System Vars - Environment Vars\nOthers\nOthers\nReal Time?CANoeIf on PC >> Not real timeIf on VN89xx or VT RT Module >> Real \nTimeOther Systemsame as CANoe\nReal Time?\nCANoeIf on PC >> Not real timeIf on VN89xx or VT RT Module >> Real Time\nCANoe\nIf on PC >> Not real time\nIf on PC >> Not real time\nIf on VN89xx or VT RT Module >> Real Time\nIf on VN89xx or VT RT Module >> Real Time\nOther Systemsame as CANoe\nOther System\nsame as CANoe\nsame as CANoe\nFor more info, CANoe Help > Technical References > .NET API\nFMI \"Functional Mock-Up Interface\"\nA tool-independent standard to support both \"model exchange\" and \"co-simulation\" of \ndynamic models using XML schema files and C header files.\nA tool-independent standard to support both \"model exchange\" and \"co-simulation\" of \ndynamic models using XML schema files and C header files.\nSome tools make a GUI interface for importing and exporting *.fmu files containing \nboth \"dll\" and \"xml\" files. (e.g. Canoe, NI Labview and CarMaker)\nSome tools make a GUI interface for importing and exporting *.fmu files containing \nboth \"dll\" and \"xml\" files. (e.g. Canoe, NI Labview and CarMaker)\nThe executable part of the fmu has either a dll for windows or a .so file for linux.\nThe executable part of the fmu has either a dll for windows or a .so file for linux.\nData exchange between 2 computers can be through a communication layer implemented \nby a special FMI wrapper.\nData exchange between 2 computers can be through a communication layer implemented \nby a special FMI wrapper.\nExample: (Interfacing between Canoe and Car-maker):Both tools can export/import a \n.fmu package that contains a main xml file with header functions to be used (ex. \nGetters) and a .dll files to be used.If Canoe needs to send a signal as an input for\nCar-maker, it exports an fmu package. (dll and xml)Then Car-maker imports this \npackage to get the value of the speed signal for example in simulation.Special UDP \nPorts are used by both tools to communicate FMI APIs.This is running fully on PC. >>\nNot real time.\nExample: (Interfacing between Canoe and Car-maker):\nBoth tools can export/import a .fmu package that contains a main xml file with \nheader functions to be used (ex. Getters) and a .dll files to be used.\nBoth tools can export/import a .fmu package that contains a main xml file with \nheader functions to be used (ex. Getters) and a .dll files to be used.\nIf Canoe needs to send a signal as an input for Car-maker, it exports an fmu \npackage. (dll and xml)\nIf Canoe needs to send a signal as an input for Car-maker, it exports an fmu \npackage. (dll and xml)\nThen Car-maker imports this package to get the value of the speed signal for example\nin simulation.\nThen Car-maker imports this package to get the value of the speed signal for example\nin simulation.\nSpecial UDP Ports are used by both tools to communicate FMI APIs.\nSpecial UDP Ports are used by both tools to communicate FMI APIs.\nThis is running fully on PC. >> Not real time.\nThis is running fully on PC. >> Not real time.\nFor more info: Check this youtube link:https://www.youtube.com/watch?v=SzjAOvUkcnI\nand also check the attached PDF files (FMI Standard and How it works).\nASAM XIL APIs\nProtocol Over Ethernet\nProtocol Over Ethernet\nUsed for communicate betweenThird party test cases toolVector interface\nUsed for communicate between\nThird party test cases toolVector interface\nThird party test cases tool\nThird party test cases tool\nVector interface\nVector interface\nOrvTestStudio3rd Party Test Bench\nOrvTestStudio3rd Party Test Bench\nOr\nvTestStudio\nvTestStudio\n3rd Party Test Bench\n3rd Party Test Bench\nReal Time?\nReal Time?\nThe Hil bench will be real time.\nThe Hil bench will be real time.\nThe Hil bench will be real time.\nFor more info: Check the attached pdf \"CANoe_as_Open_Env_Webinar\".", "type": "Document"}}