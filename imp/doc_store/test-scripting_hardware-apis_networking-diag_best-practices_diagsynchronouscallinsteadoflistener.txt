{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_hardware-apis_networking-diag_best-practices_diagsynchronouscallinsteadoflistener.txt"}, "page_content": "Diag Synchronous Call instead of Listener\nPost date: May 28, 2020 2:01:57 PM\nSome projects requires security authentication using diagnostics which involves the \nuse of an external to calculate the desired key/value from the diag response.\nUsing synchronous calls indirect modeis the best choice as it blocks on the \nresponseobjDiag().sfcSend(...)\nThen the result is passed to IMsgLog from you can get the response String data.\nFinally, you can use the data as desired.\nNote: Using Listener on Diag Response, and calling the external tool from within \nleads to undetermined behavior in CTE commands queue since it does not know when the\nlistener will be invoked, thus this option is not preferred.\n@RunContextDirectpublicvoiddbFucntionSecurityCalculation() {  IMsgLog msg = \nexu().modTS().objDiagCan().sfcSend(\"10 01\"); // blocks on the response  String \ncalculatedValue = externalToolCall(msg);  //Then, you can use the calculated value \nas needed  //For exampleif(!calculatedValue.isEmpty()) {   \nexu.modTS().objDiagCan().afcSend(\"27 01 \" + calculatedValue);  }else{ // error \nhandling   exu.comment(ErrorLevel.ERROR, \"Invalid Value\");  \n}}privateStringexternalToolCall(IMsgLog msg) {  // Process msgData and send it to \nthe external tool as required  String msgData = msg.getValueData().toString();  \nString result = \"\";try{   ExternCmd cmd =newExternCmd(Arrays.asList(newString[] \n{\"Dummy.exe\", msgData.toString()}),10000);   Runner runner = \ncmd.run(Paths.get(System.getProperty(\"user.dir\")).toFile());   result = \nrunner.getOutput();   runner.joinAll();  }catch(Exception e) {   \nExceptionUtil.log(e);  }returnresult;}\nUsing the annotation@RunContextDirectat the method is crucial => if working with \nHIL, CTE will switch to direct then return back to HIL when the method finishes.", "type": "Document"}}