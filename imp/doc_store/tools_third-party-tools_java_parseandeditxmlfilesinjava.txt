{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "tools_third-party-tools_java_parseandeditxmlfilesinjava.txt"}, "page_content": "Parse and edit XML files in Java\nPost date: Mar 1, 2020 1:46:23 PM\nJava has a wonderful library calledDOMwhich can be used to parse and modify XML \nfiles by tag names and more interesting features.\nIn a couple of minutes i was able to parse and edit an XML file for a certain \nautomation feature needed.\nOther way to do so was to implement a new parser which could have taken a lot of \ntime and effort.\nKindly follow thisLinkfor more info about how to use it.\nBelow is a code snippet of a real work done byDOMin our CASTLE system.\nCode Snippet\nprivate void updateVosstrexXml(String vosstrexXmlPath, String \npimAddressToVosstrexXml) {\ntry {\nDocumentBuilderFactory documentBuilderFactory = \nDocumentBuilderFactory.newInstance();\nDocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\nDocument document = documentBuilder.parse(vosstrexXmlPath);\n// Get all instances of castle pimAddress by tag name\nfor(int tagIndex = 0; tagIndex < document.getElementsByTagName(\"send\").getLength(); \ntagIndex++) {\nNode address = document.getElementsByTagName(\"send\").item(tagIndex);\n// update send , update address using pimAddressToVosstrexXml\nNamedNodeMap attribute = address.getAttributes();\nNode nodeAttr = attribute.getNamedItem(\"address\");\nnodeAttr.setTextContent(pimAddressToVosstrexXml);\n}\n// write the DOM object to the file\nTransformerFactory transformerFactory = TransformerFactory.newInstance();\nTransformer transformer = transformerFactory.newTransformer();\nDOMSource domSource = new DOMSource(document);\nStreamResult streamResult = new StreamResult(new File(vosstrexXmlPath));\ntransformer.transform(domSource, streamResult);\n}\ncatch (ParserConfigurationException pce) {\npce.printStackTrace();\n}\ncatch (TransformerException tfe) {\ntfe.printStackTrace();\n}\ncatch (IOException ioe) {\nioe.printStackTrace();\n} catch (SAXException sae) {\nsae.printStackTrace();\n}\n}", "type": "Document"}}