{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "tools_cte_application-configurator_tutorials_dynamic-configuration-ui.txt"}, "page_content": "Dynamic Application Configuration UI\nOverview\nThe configuration UI allows Castle Users to dynamically configure Castle project \nwithout referring to Firmware Developer.\nThe following features are provided:\n1) DBC / FIBEX/ ARXML Update (for CAN, Flexray, Ethernet, SPI)\n2) Add Checksum / Alive Counter Signals\n3) Modify/Add Diag Messages for CAN\nThe tool takes the configuration file as an input (.c5ac) and \nauto-generatesApplication.elffor each module and theappl-config.jar.\nIn detail, The CASTLE project is internally split to 2 parts: Static Part and \nDynamic Part.\nStatic Part\nThe static part is released by the firmware engineer\nconfig/data/MXXX/Application.elf (CASTLE Firmware)config/config.jar (CASTLE Java \nAPIs)\nconfig/data/MXXX/Application.elf (CASTLE Firmware)\nconfig/data/MXXX/Application.elf (CASTLE Firmware)\nconfig/config.jar (CASTLE Java APIs)\nconfig/config.jar (CASTLE Java APIs)\nDynamic Part\nThe dynamic part is auto-generated by the Configuration UI tool\nconfig.appl/data/MYYY/Application.elf (Auto Generated \nFirmware)config.appl/appl-config.jar (Auto Generated Jar)\nconfig.appl/data/MYYY/Application.elf (Auto Generated Firmware)\nconfig.appl/data/MYYY/Application.elf (Auto Generated Firmware)\nconfig.appl/appl-config.jar (Auto Generated Jar)\nconfig.appl/appl-config.jar (Auto Generated Jar)\nSessions\nEnglish Version\n//TBD\nArabic Version\n[a] Introduction\n[b] Demo\n[c] Conclusion\nConfiguration UI Tutorial (Based on Release 2.31)\nNote for Castle users : Please align with Firmware engineer your project is upgraded\nto latest release (> 2.31)\n1) Open CTE, Click on the configuration UI Tool button\n2) If prompted, Click OK to confirm stopping the CTE server\n3) As the tool opens, you will find all available Exus and Modules.\nClick on the Module that you want to configure from the Module Tree on the left\nOn the right side, you will find the Com Objects Tabs for drivers available (CAN/ \nETHERNET/ FLEXRAY/ SPI), each bus driver module has Com Object(s) attached. e.g. \nComHs, ComBr, etc. As shown in picture above,ComHsis attached toCanDriverHswhich \nrepresentsCAN_channel_ 0in Castle.\n4)DBC / ARXML Update\nSimply update the dbc/arxml using'Update'button in'Com Network Descriptors'Section.\nYou can add multiple files as well using the green'Add File(s)'button\n5)Select Cluster / ECU Nodes\nIn case you have only DBCs in your imported files, you will find only one default \nCluster 'CAN_CLUSTER'.\nIn case of ARXML, you can select your the desired cluster from the drop-down list.\nYou can select/unselect the ECU Node based on customer requirements.\n6)Adding/Removing CRC/SQC signal\nClick 'Add CRC' (Checksum) or 'Add SQC' (Alive Counter) to add the needed signals.\nFor 'CRC', you can select the desired'Tx'/'Rx' functionaccording the signal \ndirection.\nFor 'SQC', you can edit theMin/Maxvalues directly from the table.\nMore detailshere.\n9)Save and Generate\nClick on the'Generate'button above to start generation\nClick 'OK' to save changes you have made with GUI and generate.\n10)Return Back to CTE by clicking on highlighted button below and click on the Play \nbutton to \"Start Server\"\n11) Commit your Changes (VERY IMPORTANT)\nAll modified files reside inconfig.appl/folder in the project directory\nconfig.appl/data/appl-config.jar\nconfig.appl/data/appl-config.jar\nconfig.appl/data/*.c5ac\nconfig.appl/data/*.c5ac\nconfig.appl/data/ => all included .dbc, .arxml files\nconfig.appl/data/ => all included .dbc, .arxml files\nconfig.appl/data/sysgen_appl_hash.xml\nconfig.appl/data/sysgen_appl_hash.xml\nconfig.appl/data/M??/Application.elf\nconfig.appl/data/M??/Application.elf\nconfig.appl/data/M??/Application_hash.xml\nconfig.appl/data/M??/Application_hash.xml\nconfig.appl/data/M??/AddOns/Binaries/***\nconfig.appl/data/M??/AddOns/Binaries/***", "type": "Document"}}