{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_java_java-libraries_best-practices_procunittaskletsolution.txt"}, "page_content": "ProcUnit/Tasklet Solution\nPost date: Apr 19, 2016 7:03:24 AM\nAs you know , so farpauseUntilEvent(event, timeout) is working for only two events [\nevtUpdate() and evtValueChange() ] ,\nSo theProcUnit/Taskletsolution is useful in case you want to wait until a specific \nevent happens ,\nI will give an example for a test case that will stop execution until some user \nspecific signal reach certain value then it will resume execution of test case flow \n,\nProcUnit/Tasklet Example\n@RunContextHil\npublic classProcUnitTestextendsAMainTaskTS {\nprivate static intStatusCodingVariable= 0 ;\n@Override\npublic voidinit(){\n}\n@Override\npublic voidtask() {\n// Here we bind the tasklet to be fired with every value change of the \nsignalobjSigSAPPStatusCoding\nexu().bindTasklet(\"EqualsCheckTasklet\",exu().modTS().objComHs().objParkAid_Data().ob\njSigSAPPStatusCoding().evtValueChange());\n}\n@Override\npublicCollection<ITasklet> getTasklets() {\nLinkedList<ITasklet> res =newLinkedList<ITasklet>();\nres.add(newATaskletTS(\"EqualsCheckTasklet\") {\n@Override\npublic voidtask() {\nItf_SignalValue sig = \nexu().modTS().objComHs().objParkAid_Data().objSigSAPPStatusCoding();\nexu().modTS().getProcUnit().loadFromSignal(StatusCodingVariable, sig);\n// Here we compare the signal current value to zero and fire another tasklet in case\nof matching compared values\nexu().modTS().getProcUnit().fireTaskletIfVariableMatchesValue(\"TaskletFire\",true,Sta\ntusCodingVariable, 0);\n}\n});\nres.add(newATaskletTS(\"TaskletFire\") {\n@Override\npublic voidtask() {\n// Here you can add any action to be done before returning to the normal flow of \ntest case\n}\n});\nreturnres;\n}\n}\nTo use this approcah inside your test case , \nUseexu().execHilParallel(newProcUnitTest ()); which will go execute the above \nsequence then return after finish .", "type": "Document"}}