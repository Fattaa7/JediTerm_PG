{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-strategy_test-types_industrial-test_drivers-ped_4-encoder.txt"}, "page_content": "Encoder Driver (via Castle firmware and FPGA module)\nEncoders are in the production often used to synchonize messured angle/distance  \nwith incomming data from DUT.\nUsing a Castle for this particular task is the preferred option here because the \nmapping of the a measured angle and the data from DUT (on CAN/Flexray or any other \ncommunication channel) can happen in realtime in embedded software.In the radar TPL \nthere is the specific usecase to rotate the sensors at the EOL stations in front of \na target while recording what is called LLHT (Low Level Hardware Test) data (Raw FFT\ndata) arriving from the sensor. Rotation speed at the production line is up to \n60\u00b0per second. Target angle resolution is <0.01\u00b0\nSample conection (left side typical encoder connector right side RAD PIP 1.3)\nAll Radar PIPrevisions are supporting for this usecase 1-3 encoder interfaces.Each \nof these interfaces can be connected to one relative angle encoder swith 5V TTL \nlevel such as \"Heidenhain ROD 420 5000\" or similar.\nAngle data synchonization can be fully controlled via the firmware API shown at the \nright side.\nSynchonized data is delivered as standard castle message via Ethernet to the PC. \nAngle is optionally forwardedon DUT communication channel as well. (for cases where \nCASTLE external equipment is used to record the data)\nA the PC a listener in the CTE is utilized to record the information in the needed \nformat (in the RAD case this is usually  simple xml that contains the timestamps, \nangle and Raw data per protocol message.", "type": "Document"}}