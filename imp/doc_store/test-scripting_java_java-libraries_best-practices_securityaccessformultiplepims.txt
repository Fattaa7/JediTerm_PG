{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_java_java-libraries_best-practices_securityaccessformultiplepims.txt"}, "page_content": "Security Access for Multiple PIMs\nPost date: Jan 12, 2020 12:43:34 PM\nFor UPA_HKM_K3 project, the security access is implemented using DLL file \nimplementation, it was working fine using one PIM without any issue, the issue \nappeared when multiple PIMs requesting security access at the same time using from \ndifferent ECUs.\nWhat happened is all ECUs are sending the seed to the corresponding PIMs but, castle\ndoesn't know how to differentiate between the different keys and which one is \nrelated to which ECU.\nThen, Castle calculate one key regarding the implemented security algorithm and \nsendit back to all ECUs not to the required ECU only which sent this seed. All the \nother ECUs are responding with negative response as the key sent to them is related \nto another ECU.\nThe provided solution is to pass the execution unit to the DiagListener().\nFor more clarification, in the configureExu() function in CteSetup.java the exu \nshall be passed as follows:\niexu.modXX().objCanDiag().addCteEventListener(new DiagListener(exu));\nThis is to differentiate between the multiple EXUs requesting the seed and to send \nback the right key to the right EXU.\nRefer to the following Gerrit change to check the exact implementation.121963", "type": "Document"}}