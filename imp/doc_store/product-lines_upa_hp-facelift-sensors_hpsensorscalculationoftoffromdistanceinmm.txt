{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "product-lines_upa_hp-facelift-sensors_hpsensorscalculationoftoffromdistanceinmm.txt"}, "page_content": "[8] Hp Sensors Calculation of TOF from Distance in mm\nPost date: Nov 1, 2016 7:24:55 AM\nIn case you are spying on the LIN bus and need to know how does Castle send the Time\nOf Flight (TOF) from the mm distance you give in function EchoMM.\nSome Inputs to be considered:\nTime of flight counter shall be incremented every51.2 usafter TOF calibration delay.\nTOF counting shall be stopped at the limit according to the measurement mode.Time of\nflight is the time that the Ultrasonic waves travel from the sensor to the obstacle,\nthen back to the sensor.Distance = SpeedOfSound * (TimeOfFlight / 2)\nTime of flight counter shall be incremented every51.2 usafter TOF calibration delay.\nTOF counting shall be stopped at the limit according to the measurement mode.\nTime of flight counter shall be incremented every51.2 usafter TOF calibration delay.\nTOF counting shall be stopped at the limit according to the measurement mode.\nTime of flight is the time that the Ultrasonic waves travel from the sensor to the \nobstacle, then back to the sensor.\nTime of flight is the time that the Ultrasonic waves travel from the sensor to the \nobstacle, then back to the sensor.\nDistance = SpeedOfSound * (TimeOfFlight / 2)\nDistance = SpeedOfSound * (TimeOfFlight / 2)\nFrom the previous inputs we can conclude the following:\nSince we have TOF resolution is 51.2 us per counter, So TOF of 51.2 us shall \ncorrespond to TOF signal value = 1.The corresponding distance is:SpeedOfSound * \n(Time Of Flight /2)= 340.29 * (51.2us / 2 ) = 8.711424 mm.So, 8.711424 mm shall \ncorrespond to TOF signal value = 1.Now any input distance value shall be multiplied \nby (1/8.711424) = 0.11479179523347732816127420729378.----------------------> (1)\nSince we have TOF resolution is 51.2 us per counter, So TOF of 51.2 us shall \ncorrespond to TOF signal value = 1.\nSince we have TOF resolution is 51.2 us per counter, So TOF of 51.2 us shall \ncorrespond to TOF signal value = 1.\nThe corresponding distance is:SpeedOfSound * (Time Of Flight /2)= 340.29 * (51.2us /\n2 ) = 8.711424 mm.\nThe corresponding distance is:SpeedOfSound * (Time Of Flight /2)= 340.29 * (51.2us /\n2 ) = 8.711424 mm.\nSo, 8.711424 mm shall correspond to TOF signal value = 1.\nSo, 8.711424 mm shall correspond to TOF signal value = 1.\nNow any input distance value shall be multiplied by (1/8.711424) = \n0.11479179523347732816127420729378.----------------------> (1)\nNow any input distance value shall be multiplied by (1/8.711424) = \n0.11479179523347732816127420729378.----------------------> (1)\nNote that previously for AK Sensors, we had a scale 2.744 in the firmware html.\nOnly for consistency, we made the same scale for HPSensors EchoMM function: 2.744.\nThis means that any distance that is written in the scripts, will go to CASTLE \ndivided by this scale.(Input value * 1/2.744) = (Input value * \n0.36443148688046647230320699708455)\nAs our scale for TOF was previously calculated inequation (1), accordingly we need \nthe Input value to be multiplied by (1/8.711424):\nInside the firmware we have:\n[Input_Value * 0.36443148688046647230320699708455(scale from html) ] * \n0.11479179523347732816127420729378 (TOF scale) / \n0.36443148688046647230320699708455(scale from html)\nSo Input Value = Input Value * 0.11479179523347732816127420729378 .\nExample:\nIf you call function EchoMM givingDirect_TOF_1 = 500 mm.\nSo value of TOF_1 on LIN bus = 500 * 0.11479179523347732816127420729378 = 57.", "type": "Document"}}