{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "tools_third-party-tools_git_mergingbranchesusinggitmergtool.txt"}, "page_content": "Merging Branches using git mergtool\nPost date: Jul 15, 2019 11:19:17 AM\nMergetool\nMergetool is a merge utility used to resolve merge conflict due to merging \n(Typically happens after git merge command).\nWe can either run the mergetool in one file based or based on a complete folder with\nall child files, when the command run the tool shall try to resolve the difference \non each file, if it was not able to resolve these conflicts it will pop up the file \nwhich contain the conflict in 3 versions the\nIf one or more <file> parameters are given, the merge tool program will be run to \nresolve differences on each file (skipping those without conflicts). Specifying a \ndirectory will include all unresolved files in that path. If no <file> names are \nspecified,git mergetoolwill run the merge tool program on every file with merge \nconflicts.\ngit merge tool support the 3 way diff tools like Kdiff3.\nHow To Use\nCheck the current installed tools which are supported by git mergetool.git mergetool\n--tool-help\nCheck the current installed tools which are supported by git mergetool.\ngit mergetool --tool-help\ngit mergetool --tool-help\nApply the required merge or rebase command required.git rebase --onto [Base] [Local]\n[Remote]\nApply the required merge or rebase command required.\ngit rebase --onto [Base] [Local] [Remote]\ngit rebase --onto [Base] [Local] [Remote]\nApply git mergetool with the required tool:git mergetool --tool=kdiff3\nApply git mergetool with the required tool:\ngit mergetool --tool=kdiff3\ngit mergetool --tool=kdiff3\nyou can normally select which change will be included from which branch, or even \ninclude the changes from both branches.\nyou can normally select which change will be included from which branch, or even \ninclude the changes from both branches.\nyou can normally select which change will be included from which branch, or even \ninclude the changes from both branches.\nyou can normally select which change will be included from which branch, or even \ninclude the changes from both branches.\nNote:\nBase: is the version that your two changes are based on, (it is the base for both \nthe remote and local).Local: is the branch that you want to rebase the changes based\non it.Remote: is the branch that you want to rebase/merge on Local.\nBase: is the version that your two changes are based on, (it is the base for both \nthe remote and local).\nBase: is the version that your two changes are based on, (it is the base for both \nthe remote and local).\nLocal: is the branch that you want to rebase the changes based on it.\nLocal: is the branch that you want to rebase the changes based on it.\nRemote: is the branch that you want to rebase/merge on Local.\nRemote: is the branch that you want to rebase/merge on Local.\nReference:https://git-scm.com/book/en/v2/Git-Branching-Rebasing\nIn case kdiff3 is not installed on your machine , you can followthis.\nNote: You have to open IS ticket to install it.", "type": "Document"}}