{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_java_java-libraries_best-practices_taskletsandhilvsjavacommands.txt"}, "page_content": "[Tasklets] and HIL vs Java commands\nPost date: Jul 5, 2018 1:38:39 PM\nThis post is to obtain how Castle will deal with HIL and Java commands included in a\nTasklet task(),\nTasklet example\n@Override\npublic voidtask() {\nexu.bindTasklet(\"SinWaveTasklet\", \nexu.modTS().objComCan1().objLH_EPS_03().evtPreTransmit_1());\n}\n@Override\npublic Collection<ITasklet> getTasklets() {\nLinkedList<ITasklet> res = new LinkedList<ITasklet>();\nres.add(newATaskletTS(\"SinWaveTasklet\") {\n@Override\npublic voidtask() {\ntime_in_milliSeconds+= 10.0;\nexu.pause(2);\ntime_in_seconds= (double)time_in_milliSeconds/ (double)1000.0;\nEPS_Lenkmoment_signal_value= java.lang.Math.abs((0.3 * (Math.sin(2.0 * Math.PI* \n(time_in_seconds/ 4.0)))));\nSystem.out.println(\"SinWaveValue \"+EPS_Lenkmoment_signal_value);\nexu.modTS().objComCan1().objLH_EPS_03().objSigEPS_Lenkmoment().afcSet(EPS_Lenkmoment\n_signal_value);\n}\nYou can find at the above example that I've created a Tasklet \"SinWaveTasklet\" and \nbinded it to a PreTransmit event of a CAN message,\nSo normal behavior would be that the steps included inside the tasklet body will be \nexecuted every time I send the mentioned CAN message,\nBut after executing you will find that just one step that will be executed each \nevent trigger which is\nWhy would this happen ?!\nBecause It's the only HIL command (ie, it will be sent to Castle HIL buffer for \nexecution) unlike the other Java commands which will executed by eclipse just once.\nSo what is the solution to this problem ? How to make custom logic inside your \nlibrary and make sure it works ?\nYou can use Tasklet along with ProcUnit to store or operate on your java variables \n.... check below post for more info,\nProcUnit/Tasklet Solution\nProcUnit APIs", "type": "Document"}}