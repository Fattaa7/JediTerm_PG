{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_hardware-apis_networking-ethernet_best-practices_changemacaddressesinethernetdriver.txt"}, "page_content": "Change MAC Addresses in Ethernet Driver\nPost date: Feb 18, 2020 10:30:50 AM\nWe can change source MAC and destination MAC address in the Ethernet Packet using \nthe following APi's :\n1- objEthernetDriver().afcSetDestMac(X, X, X, X, X, X); to change destination MAC.\n2- objEthernetDriver_Host_ECU().afcChangeMacAddress(X, X, X, X, X, X); to change \nsource MAC address.\n.\nUse case:\n1- AS-ECU implements a firewall and does not respond to any ARP requests, So any \nremote end can not know its MAC address. As a result, any remote end (like Castle) \nneeds to communicate with it over TCP should send SYN packet with any previous ARP \nrequests. This will force Castle to add MAC address of AS-ECU to its static ARP \ntable so that Castle can communicate without any ARP requests. To do so, just call \nobjEthernetDriver().afcSetDestMac(X, X, X, X, X, X);\n2- In AS FW project, Castle simulates Host and SoC separately. Each of them has a \nspecific source MAC address and usually we need to change them in run time. To do \nso, just call objEthernetDriver_Host_ECU().afcChangeMacAddress(X, X, X, X, X, X);", "type": "Document"}}