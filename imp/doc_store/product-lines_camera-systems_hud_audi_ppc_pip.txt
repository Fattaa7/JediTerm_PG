{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "product-lines_camera-systems_hud_audi_ppc_pip.txt"}, "page_content": "HUD_Audi_PPC_Pip\nECU Side\nSerializer used: MAX96853.\nSerializer used: MAX96853.\nECU Schematic and Layout are attached : TO DO\nECU Schematic and Layout are attached : TO DO\nECU Main Connector\nHow to power up the ECU?Connect KL30 and KL15 from base module.CanFD from Basis pcb \n, with BIP.\nHow to power up the ECU?Connect KL30 and KL15 from base module.CanFD from Basis pcb \n, with BIP.\nHow to power up the ECU?\nConnect KL30 and KL15 from base module.\nConnect KL30 and KL15 from base module.\nCanFD from Basis pcb , with BIP.\nCanFD from Basis pcb , with BIP.\nECU Serializer Connections\nFrom the schematic, and Deserializer Datasheet, we can deduce the following:\nAlso from ECU Schematics and Deserializer Datasheet we can deduce that the 32 bits \nassignment is as follows\nTo know how this map to serializer 16 bits, we look into the below table from \nserializer datasheet.\nFrom which we get that:\nIn a clock:Serializer D0 to D14, are corresponding to Serial Data 0:14\nIn a clock:Serializer D0 to D14, are corresponding to Serial Data 0:14\nIn the second clock:serializer D0 to D14 are corresponding to Serial Data 15:29\nIn the second clock:serializer D0 to D14 are corresponding to Serial Data 15:29\nSome Timing diagrams are attached, from which we can deduce:\nFPS = 60.241 Hz\nCASTLE Side\nHardware PIP\nWe will use Parkman PIP as a starting point. Schematic attached.\nUsed Serializer: MAX9271. (Datasheet Attached).\nParkman PIP contains 4 serializers (S1, S2, S3 and S4)\nWe will use Serializer S1. (We only need one serializer in this project)\nSerializer\nFrom the pip schematic, serializer data sheet, we can deduce the following:\nPCLK, D0 to D15 Values\nAs serializer has only 16 input, while deserializer has 32, then each 32-bit word \nshall contain 2 sets of D0-D15PCLK of serializer = 2xPCLK of deserializerPCLK of \nDeserializer = 8.2MHzPCLK of Serializer = 16.4MHzResolution: Vertical: 240, \nHorizontal 480 (LCD datasheet attached)D0 to D15 in the first clock will carry the \nvalues corresponding to Deserializer DOUT0 to DOUT15. (Illustrated in a table \nabove)In the next Clk, D0 to D15 will carry the values corresponding to Deserializer\nDOUT16 to DOUT31. (Illustrated in a table above)Actions:D10 to be connected to \nS2_d0. (As Serializer 2 will not be used in HUD_PSA_DS3)D11 to be connected to \nS2_d1. (As Serializer 2 will not be used in HUD_PSA_DS3)D12 to be connected to \nS2_d2. (As Serializer 2 will not be used in HUD_PSA_DS3)D13 to be connected to \nS2_d3. (As Serializer 2 will not be used in HUD_PSA_DS3)D14 to be connected to \nS2_d4. (As Serializer 2 will not be used in HUD_PSA_DS3)D15 to be connected to \nS2_d5. (As Serializer 2 will not be used in HUD_PSA_DS3)Replace the twisted pair \nconnector with a coaxial one.Remove the IO Expander U12. In order not to have one \ndriver for D10 and D12.Connect PWDN to VCC => Disconnect R2 from Gnd, connect it to \n3.3Remove R136\nAs serializer has only 16 input, while deserializer has 32, then each 32-bit word \nshall contain 2 sets of D0-D15PCLK of serializer = 2xPCLK of deserializerPCLK of \nDeserializer = 8.2MHzPCLK of Serializer = 16.4MHz\nAs serializer has only 16 input, while deserializer has 32, then each 32-bit word \nshall contain 2 sets of D0-D15\nPCLK of serializer = 2xPCLK of deserializerPCLK of Deserializer = 8.2MHzPCLK of \nSerializer = 16.4MHz\nPCLK of serializer = 2xPCLK of deserializer\nPCLK of Deserializer = 8.2MHz\nPCLK of Deserializer = 8.2MHz\nPCLK of Serializer = 16.4MHz\nPCLK of Serializer = 16.4MHz\nResolution: Vertical: 240, Horizontal 480 (LCD datasheet attached)\nResolution: Vertical: 240, Horizontal 480 (LCD datasheet attached)\nD0 to D15 in the first clock will carry the values corresponding to Deserializer \nDOUT0 to DOUT15. (Illustrated in a table above)\nD0 to D15 in the first clock will carry the values corresponding to Deserializer \nDOUT0 to DOUT15. (Illustrated in a table above)\nIn the next Clk, D0 to D15 will carry the values corresponding to Deserializer \nDOUT16 to DOUT31. (Illustrated in a table above)\nIn the next Clk, D0 to D15 will carry the values corresponding to Deserializer \nDOUT16 to DOUT31. (Illustrated in a table above)\nActions:\nActions:\nD10 to be connected to S2_d0. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD10 to be connected to S2_d0. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD11 to be connected to S2_d1. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD11 to be connected to S2_d1. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD12 to be connected to S2_d2. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD12 to be connected to S2_d2. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD13 to be connected to S2_d3. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD13 to be connected to S2_d3. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD14 to be connected to S2_d4. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD14 to be connected to S2_d4. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD15 to be connected to S2_d5. (As Serializer 2 will not be used in HUD_PSA_DS3)\nD15 to be connected to S2_d5. (As Serializer 2 will not be used in HUD_PSA_DS3)\nReplace the twisted pair connector with a coaxial one.\nReplace the twisted pair connector with a coaxial one.\nRemove the IO Expander U12. In order not to have one driver for D10 and D12.\nRemove the IO Expander U12. In order not to have one driver for D10 and D12.\nConnect PWDN to VCC => Disconnect R2 from Gnd, connect it to 3.3\nConnect PWDN to VCC => Disconnect R2 from Gnd, connect it to 3.3\nRemove R136\nRemove R136\nHardware Project\nMHSCopyAXI_Lite_Video+axi2axi_connector_Videofrom ParkmanCopyvideo_bc_0from \nParkmanCopyaxi_vdma_0from ParkmanCopyvideo_test_src_0from \nParkmanCopyv_axi4s_vid_out_0from ParkmanNeeds modifications to match the \nprojectUCFFix D0 to D15 pinoutCopy UART pin assignment from Parkman\nMHSCopyAXI_Lite_Video+axi2axi_connector_Videofrom ParkmanCopyvideo_bc_0from \nParkmanCopyaxi_vdma_0from ParkmanCopyvideo_test_src_0from \nParkmanCopyv_axi4s_vid_out_0from ParkmanNeeds modifications to match the project\nMHS\nCopyAXI_Lite_Video+axi2axi_connector_Videofrom Parkman\nCopyAXI_Lite_Video+axi2axi_connector_Videofrom Parkman\nCopyvideo_bc_0from Parkman\nCopyvideo_bc_0from Parkman\nCopyaxi_vdma_0from Parkman\nCopyaxi_vdma_0from Parkman\nCopyvideo_test_src_0from Parkman\nCopyvideo_test_src_0from Parkman\nCopyv_axi4s_vid_out_0from Parkman\nCopyv_axi4s_vid_out_0from Parkman\nNeeds modifications to match the project\nNeeds modifications to match the project\nUCFFix D0 to D15 pinoutCopy UART pin assignment from Parkman\nUCF\nFix D0 to D15 pinout\nFix D0 to D15 pinout\nCopy UART pin assignment from Parkman\nCopy UART pin assignment from Parkman\nSW Project\nUART Control ChannelCopy + Modify: cameras_bc.c and  cameras_bc.h From ParkmanMake \nthe startup sequence as per the data sheet if not done by the ECUSet BWS to 32-bit \nmode if not done by the ECU\nUART Control Channel\nCopy + Modify: cameras_bc.c and  cameras_bc.h From ParkmanMake the startup sequence \nas per the data sheet if not done by the ECUSet BWS to 32-bit mode if not done by \nthe ECU\nCopy + Modify: cameras_bc.c and  cameras_bc.h From Parkman\nMake the startup sequence as per the data sheet if not done by the ECU\nMake the startup sequence as per the data sheet if not done by the ECU\nSet BWS to 32-bit mode if not done by the ECU\nSet BWS to 32-bit mode if not done by the ECU\nIn firmware base: Camera.c + Camera.h shall be adapted for no CAPTURE + Only One \nStream\nIn firmware base: Camera.c + Camera.h shall be adapted for no CAPTURE + Only One \nStream", "type": "Document"}}