{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "product-lines_camera-systems_quad-camera-module_bt-656-style-embedded-sync.txt"}, "page_content": "BT.656 Style Embedded Sync\n[src:TDA2x_SR1.1_NDA_TRM_vY.pdfsection:9.4.5.2.6.2]\nFor external devices that send out 10 bits (single pixel interface) or 20 bits \n(parallel Y-Cb/Cr interface) of data, only the 8 (single pixel interface) or 16 \n(parallel 8bY-8bCb/Cr interface) most significant bits of each pixel are used. The \nkey code words are\nStart of Active Video (SAV) and\nStart of Active Video (SAV) and\nEnd of Active Video (EAV)\nEnd of Active Video (EAV)\nThree flags are found in these code words:\nF (field), [used in interlaced streams. only?]\nF (field), [used in interlaced streams. only?]\nV (vertical sync), and\nV (vertical sync), and\nH (horizontal sync).\nH (horizontal sync).\nThese flags signify the position in the frame corresponding to the dataimmediately \nfollowingthe codeword. The flags determine whether the code is EAV or SAV and where \nthey lie in the picture. The first byte of the code word is 0xFF. The second and \nthird bytes are 0x00. The bit ordering of the fourth byte is detailed:\nThe FVH flags are sent with four protection bits to support double error detection, \nsingle error correction. A non-correctable detected error is simply ignored. Details\nmay be fetched from source. This feature is not implemented on Castle quad-camera \nmodule.\nThe input data mode is 8 bits for the following example.", "type": "Document"}}