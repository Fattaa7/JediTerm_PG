{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "product-lines_mbm_testing-strategy_radarreplaymode-hil.txt"}, "page_content": "Radar Replay Mode - System Overview\nPost date: Sep 7, 2017 9:27:43 AM\nIntroduction:\nThe main purpose of the system is taking pre-recorded data from real world, and use \nCASTLE test bench to replay the data on the sensor as if it's the real scenario. \nThis way a greater depth is added to software validation, and gives the opportunity \nto make sure the system is robust over a wide range of scenarios from the real \nworld.\nMotivation:\nLet's first take a look on the Radar sensor and its main components:\nDSP is reponsible for all needed signal processing.Antenna board is connected to the\nsensor using the interfacing RF-Connector, to send data to the DSP on 2 analog \nchannels Rx_0 and Rx_1.DSP takes antenna analog signals, gather information and then\nit's the role of the MCU to put the algorithms that would say the object is related \nto which feature (LCA, DOW, CTA, ...etc) and send tracks data on PCAN.VCAN is the \nport of communication between the sensor and the rest of vehicle nodes. (aka: Public\nCAN)\nDSP is reponsible for all needed signal processing.\nDSP is reponsible for all needed signal processing.\nAntenna board is connected to the sensor using the interfacing RF-Connector, to send\ndata to the DSP on 2 analog channels Rx_0 and Rx_1.\nAntenna board is connected to the sensor using the interfacing RF-Connector, to send\ndata to the DSP on 2 analog channels Rx_0 and Rx_1.\nDSP takes antenna analog signals, gather information and then it's the role of the \nMCU to put the algorithms that would say the object is related to which feature \n(LCA, DOW, CTA, ...etc) and send tracks data on PCAN.\nDSP takes antenna analog signals, gather information and then it's the role of the \nMCU to put the algorithms that would say the object is related to which feature \n(LCA, DOW, CTA, ...etc) and send tracks data on PCAN.\nVCAN is the port of communication between the sensor and the rest of vehicle nodes. \n(aka: Public CAN)\nVCAN is the port of communication between the sensor and the rest of vehicle nodes. \n(aka: Public CAN)\nWhat do we currently test ?\n- DAS team currently test scenarios for every feature in the MCU just by inserting \ndirect tracks data into PCAN using CASTLE.\nThere are two modes of operation for the current Validation testing activity:\nOnline Mode:\nOnline Mode:\nOnline Mode:\nDSP is connected and flashed on the sensor. So, tracks are being sent through the \nDSP without simulation.Only diagnostics tested.\nDSP is connected and flashed on the sensor. So, tracks are being sent through the \nDSP without simulation.\nDSP is connected and flashed on the sensor. So, tracks are being sent through the \nDSP without simulation.\nOnly diagnostics tested.\nOnly diagnostics tested.\nOffline Mode:\nOffline Mode:\nOffline Mode:\nDSP software is not flashed on the sensor.MCU algorithms are tested by creating \nscenarios by sending tracks information through PCAN.\nDSP software is not flashed on the sensor.\nDSP software is not flashed on the sensor.\nMCU algorithms are tested by creating scenarios by sending tracks information \nthrough PCAN.\nMCU algorithms are tested by creating scenarios by sending tracks information \nthrough PCAN.\nConclusion: We currently don't test the DSP software -_-\nHow does the DSP input look like ?\nNow, let's have a closer look on the DSP functionality, Radar sensor measures three \nmain parameters:\n1.Range Measurement:\nR = C * t /2, where:\nR = Target RangeC = Speed of light (300000 km/s)t = Time from Radar to Target\nR = Target Range\nR = Target Range\nC = Speed of light (300000 km/s)\nC = Speed of light (300000 km/s)\nt = Time from Radar to Target\nt = Time from Radar to Target\n2.Velocity Measurement:(Relative Velocity)\n- Concept is the same as the acoustic and electromagnetic waves. Using the Doppler \neffect:\nTransmitter and Receiver closing to each other:Wave is compressed, Frequency \nincreases.\nTransmitter and Receiver closing to each other:\nWave is compressed, Frequency increases.\nWave is compressed, Frequency increases.\nTransmitter and Receiver moving away from each other:Wave is expanded, Frequency \ndecreases.\nTransmitter and Receiver moving away from each other:\nWave is expanded, Frequency decreases.\nWave is expanded, Frequency decreases.\n3.Target Angle Measurement:\n- From the above illustration with a known wave length between the two channels, we \nactually get the phase difference between the two receiving antennas, and the output\nwould be something called the \"Phase Curve\":\nThe Phase Curve simply says: \"when the phase shift between the two channels was \nalpha, the angle of target was beta\".\nRadar Types:\nThere are mainly two types of radar:\nPulse Radar:Sends short pulses and determine the distance by measuring the time \ndelay between Tx and Rxsignals.Blind on short distances.Measures relative target \nspeed using Doppler shift in Tx frequency.\nPulse Radar:\nSends short pulses and determine the distance by measuring the time delay between Tx\nand Rxsignals.\nSends short pulses and determine the distance by measuring the time delay between Tx\nand Rxsignals.\nBlind on short distances.\nBlind on short distances.\nMeasures relative target speed using Doppler shift in Tx frequency.\nMeasures relative target speed using Doppler shift in Tx frequency.\nFrequency Modulated Continuous Wave Radar (FMCW - Chirp):Constantly sends linearly \nmodulated signals and determine the distance based on the difference between Tx and \nRxfrequency.Echo delay is proportional to Range.Beat Frequency is proportional to \necho delay.Therefore, Range to object is proportional to beat frequency.\nFrequency Modulated Continuous Wave Radar (FMCW - Chirp):\nConstantly sends linearly modulated signals and determine the distance based on the \ndifference between Tx and Rxfrequency.\nConstantly sends linearly modulated signals and determine the distance based on the \ndifference between Tx and Rxfrequency.\nEcho delay is proportional to Range.\nEcho delay is proportional to Range.\nBeat Frequency is proportional to echo delay.\nBeat Frequency is proportional to echo delay.\nTherefore, Range to object is proportional to beat frequency.\nTherefore, Range to object is proportional to beat frequency.\nFrom the previous image, we get that in FMCW: When object is at aFarther Range, Beat\nis at aHigher Frequency.\nMBH2 Sensor Requirements:\nIdeally, the MBH2 sensor has 4 adjacent transmitting beams and 2 receiving \noverlapping beams.\nAngle Comes as:\nRange and Velocity:\nThat was a brief about the system overview, next part will be in detailed DSP \nrequirements with respect to the implemented software and CASTLE implementation for \nthe system.", "type": "Document"}}