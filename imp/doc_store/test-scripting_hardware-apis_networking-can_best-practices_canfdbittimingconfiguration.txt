{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_hardware-apis_networking-can_best-practices_canfdbittimingconfiguration.txt"}, "page_content": "CAN FD bit timing Configuration\nPost date: Aug 13, 2018 1:36:12 PM\nIntroduction:\nThe Controller Area Network (CAN) is a serial, asynchronous, multi-master \ncommunication protocol for connecting electronic control modules in automotive and \nindustrial applications. A feature of the CAN protocol is that the bit rate, bit \nsample point and number of samples per bit are programmable. This gives the system \nengineer the opportunity to optimize the performance of the network for a given \napplication.\nThe CAN FD protocol defines two bit rates, the first for the ARBITRATION-PHASE with \na longer bit time and the second for the data phase with the same or with a shorter \nbit time. The definition for the first bit rate is the same as for the NOMINAL BIT \nRATE and the NOMINAL BIT TIME in the CAN protocol specification. The definition for \nthe second bit rate, the DATA BIT RATE WITH the DATA BIT TIME, requires a separate \nconfiguration register set. Both bit times consist of separate non-overlapping time \nsegments\nSYNCHRONIZATION SEGMENT (SYNC_SEG):\nThis part of the bit time is used to synchronize the various nodes on the bus. An \nedge is expected to lie within this segment.\nPROPAGATION TIME SEGMENT (PROP_SEG):\nThis part of the bit time is used to compensate for the physical delay times within \nthe network. It is twice the sum of the signal\u2019s propagation time on the bus line, \nthe input comparator delay, and the output driver delay.\nPHASE BUFFER SEGMENT1 (PHASE_SEG1):\nPHASE BUFFER SEGMENT2 (PHASE_SEG2):\nThese PHASE-BUFFER-SEGMENTS are used to compensate for edge phase errors. These \nsegments can be lengthened or shortened by re-synchronization.\nSAMPLE POINT:\nThe SAMPLE POINT is the point of time at which the bus level is read and interpreted\nas the value of that respective bit. It\u2019s location is at the end of PHASE_SEG1.\nWhy Different Sampling Point in CANFD cause errors:\nIn the Normal CAN the Different in the Sampling Point between different CAN Devices \nwill not make any bit timing problems as long as we Configure the Same Arbitration \nRate in the whole network.\nIn the CANFD the Different in the Sampling Point between different CANFD Devices may\nmake bit timing problems(will appear as a stuff error) even if we Configure the Same\nArbitration Rate and Data Rate in the whole network.\nThe Reason for that is the Structure of CANFD Frame and Specially a 2 bit inside the\nFrame Called Bit Rate Switching bit and CRC Delimeter where we start to Switch from \nArbitration Rate to the Data Rate.\nThe Special Bit(BRS) is Constructed from a Part from the Arbitration Phase \nConfiguration and another Part from the Data Phase which may lead to a different bit\ntiming in this bit.\nEquation to Calculate Parameter for a specific Sample Point:\nIn Our Current implementation for the CAN we have two Can Controllers (SJA1000 used \nas TX and RX and TRACE CAN for RX only)\nIn the SJA1000 CAN Controller we have three parameters for each phase and two \nequation to define the Sample Points.For Arbitration Rate:Clk_Time(20ns) * 2 * \n(Prescaler_arbitration + 1) * (1 + (1+TimeSegment1_arbitration) + \n(1+TimeSegment2_arbitration)) = Arbitration_Rate(ex:2000ns for 500Kb/s).For Data \nRate:Clk_Time(20ns) * (Prescaler_data + 1) * (1 + (1+TimeSegment1_data) + \n(1+TimeSegment2_data)) = Data_Rate(ex:500ns for 2Mb/s).\nIn the SJA1000 CAN Controller we have three parameters for each phase and two \nequation to define the Sample Points.For Arbitration Rate:Clk_Time(20ns) * 2 * \n(Prescaler_arbitration + 1) * (1 + (1+TimeSegment1_arbitration) + \n(1+TimeSegment2_arbitration)) = Arbitration_Rate(ex:2000ns for 500Kb/s).For Data \nRate:Clk_Time(20ns) * (Prescaler_data + 1) * (1 + (1+TimeSegment1_data) + \n(1+TimeSegment2_data)) = Data_Rate(ex:500ns for 2Mb/s).\nIn the SJA1000 CAN Controller we have three parameters for each phase and two \nequation to define the Sample Points.\nFor Arbitration Rate:Clk_Time(20ns) * 2 * (Prescaler_arbitration + 1) * (1 + \n(1+TimeSegment1_arbitration) + (1+TimeSegment2_arbitration)) = \nArbitration_Rate(ex:2000ns for 500Kb/s).\nFor Arbitration Rate:\nClk_Time(20ns) * 2 * (Prescaler_arbitration + 1) * (1 + (1+TimeSegment1_arbitration)\n+ (1+TimeSegment2_arbitration)) = Arbitration_Rate(ex:2000ns for 500Kb/s).\nClk_Time(20ns) * 2 * (Prescaler_arbitration + 1) * (1 + (1+TimeSegment1_arbitration)\n+ (1+TimeSegment2_arbitration)) = Arbitration_Rate(ex:2000ns for 500Kb/s).\nFor Data Rate:Clk_Time(20ns) * (Prescaler_data + 1) * (1 + (1+TimeSegment1_data) + \n(1+TimeSegment2_data)) = Data_Rate(ex:500ns for 2Mb/s).\nFor Data Rate:\nClk_Time(20ns) * (Prescaler_data + 1) * (1 + (1+TimeSegment1_data) + \n(1+TimeSegment2_data)) = Data_Rate(ex:500ns for 2Mb/s).\nClk_Time(20ns) * (Prescaler_data + 1) * (1 + (1+TimeSegment1_data) + \n(1+TimeSegment2_data)) = Data_Rate(ex:500ns for 2Mb/s).\nIn the TRACE CAN the Two Equations is as follow:For Arbitration Rate:Clk_Time(20ns) \n*  (Prescaler_arbitration) * (1 + (TimeSegment1_arbitration) + \n(TimeSegment2_arbitration)) = Arbitration_Rate(ex:2000ns for 500Kb/s).For Data \nRate:Clk_Time(20ns) * (Prescaler_data) * (1 + (1+TimeSegment1_data) + \n(1+TimeSegment2_data)) = Data_Rate(ex:500ns for 2Mb/s).\nIn the TRACE CAN the Two Equations is as follow:\nFor Arbitration Rate:Clk_Time(20ns) *  (Prescaler_arbitration) * (1 + \n(TimeSegment1_arbitration) + (TimeSegment2_arbitration)) = \nArbitration_Rate(ex:2000ns for 500Kb/s).\nFor Arbitration Rate:\nClk_Time(20ns) *  (Prescaler_arbitration) * (1 + (TimeSegment1_arbitration) + \n(TimeSegment2_arbitration)) = Arbitration_Rate(ex:2000ns for 500Kb/s).\nClk_Time(20ns) *  (Prescaler_arbitration) * (1 + (TimeSegment1_arbitration) + \n(TimeSegment2_arbitration)) = Arbitration_Rate(ex:2000ns for 500Kb/s).\nFor Data Rate:Clk_Time(20ns) * (Prescaler_data) * (1 + (1+TimeSegment1_data) + \n(1+TimeSegment2_data)) = Data_Rate(ex:500ns for 2Mb/s).\nFor Data Rate:\nClk_Time(20ns) * (Prescaler_data) * (1 + (1+TimeSegment1_data) + \n(1+TimeSegment2_data)) = Data_Rate(ex:500ns for 2Mb/s).\nClk_Time(20ns) * (Prescaler_data) * (1 + (1+TimeSegment1_data) + \n(1+TimeSegment2_data)) = Data_Rate(ex:500ns for 2Mb/s).\nReferences:\nNXP AN1798 Application Note\nNXP AN1798 Application Note\nBosch Specs\nBosch Specs", "type": "Document"}}