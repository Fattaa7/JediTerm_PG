{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "tools_cte_tutorials_tsxml-starter-plugin.txt"}, "page_content": "CTE TSXML Starter Plugin\nThe CTE (CASTLE Test Environment) features a powerful plugin calledTSXML Starter. \nThis plugin is designed to simplify and manage the execution of TSXML-based test \ncases within the CTE framework.\nKey Functionality and Features:\nRoot Path Selection:Users can designate a root directory. The TSXML Starter plugin \nwill then automatically scan this directory and its subdirectories, listing all \ndiscoverable TSXML files.\nRoot Path Selection:Users can designate a root directory. The TSXML Starter plugin \nwill then automatically scan this directory and its subdirectories, listing all \ndiscoverable TSXML files.\nTest Case Selection:From the populated list, users can easily select specific test \ncases (represented by TSXML files) for execution. This provides a streamlined way to\nmanage which tests are run.\nTest Case Selection:From the populated list, users can easily select specific test \ncases (represented by TSXML files) for execution. This provides a streamlined way to\nmanage which tests are run.\nUser Interface Options:The plugin offers various configurable options directly \nwithin its user interface, allowing for fine-grained control over the test execution\nprocess.\nUser Interface Options:The plugin offers various configurable options directly \nwithin its user interface, allowing for fine-grained control over the test execution\nprocess.\nManaging Castle State with TSXML Starter:\nA critical aspect of test execution in CTE is managing the state of \"CASTLE\". The \nTSXML Starter plugin provides functionalities to ensure Castle is in the desired \nstate for testing:\n\"Reset after each test\" (UI Option):This checkbox button option, available in the \nTSXML Starter UI, allows users to configure Castle to be automatically reset after \nthe completion ofevery individual test case. This is highly beneficial for \nmaintaining test isolation and ensuring that each test starts from a clean, \npredictable state, preventing residual effects from previous tests.\n\"Reset after each test\" (UI Option):This checkbox button option, available in the \nTSXML Starter UI, allows users to configure Castle to be automatically reset after \nthe completion ofevery individual test case. This is highly beneficial for \nmaintaining test isolation and ensuring that each test starts from a clean, \npredictable state, preventing residual effects from previous tests.\nResetting Castle Before Test Group Execution:Castle can be restarted before the \nexecution of an entire test group by configuring theTSXML launcher plugin in CTE to \napply a \"restart pre-action\". This pre-action ensures that the Castle environment is\nin a fresh and known state before any test within the group begins, providing a \nconsistent baseline for the entire test group's execution.\nResetting Castle Before Test Group Execution:Castle can be restarted before the \nexecution of an entire test group by configuring theTSXML launcher plugin in CTE to \napply a \"restart pre-action\". This pre-action ensures that the Castle environment is\nin a fresh and known state before any test within the group begins, providing a \nconsistent baseline for the entire test group's execution.", "type": "Document"}}