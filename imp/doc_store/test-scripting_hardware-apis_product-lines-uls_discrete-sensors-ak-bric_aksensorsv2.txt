{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_hardware-apis_product-lines-uls_discrete-sensors-ak-bric_aksensorsv2.txt"}, "page_content": "Ak sensors V2\nPost date: Nov 25, 2018 10:51:32 AM\nAbstract\nThe legacy AK sensor was updated to V2 in CASTLE5 in order to, cover a new \nrequirement related to blind spot detection.\nAK V2 is backward compatible with AK V1 i.e. all functionalities of AK V1 are \nmaintained and they were extended to add the new feature.\nEE_Programming feature\nSimply, this feature is writing/reading some newly defined parameters to a memory \nblock to be used in blind spot detection.\nCASTLE5 implementation\nAs a slave, the sensor (Slave) shall respond to a new request from the ECU (Master) \nas follows:\nWhere:\nT1 = 200 \u2013 412 \u00b5s\nT2 = 412 \u2013 800 \u00b5s\nT3 = 1200 \u2013 1600 \u00b5s\nT4 = 2400 -\u2013 3300 \u00b5s\nThe EE_Programming request is formed by 2 main parts as illustrated below:\nPart 1 : encoded request which means that the ECU needs the sensor to enter the \nee-programming mode\nPart 2 : differentiates between 4 available functions while in EE-Programming mode.\nThe table below illustrates all available functions:\nN.B: Currently, functions \"00\" and \"01\" are only implemented as per the business \nneed.\nEE-Programming functions:\nWrite data to shadow registers:The ECU requests to store some data into the sensors \nmemory\nWrite data to shadow registers:The ECU requests to store some data into the sensors \nmemory\nRead contents of shadow registers:The ECU requests to read back the stored data\nRead contents of shadow registers:The ECU requests to read back the stored data\nWhat is actually stored and read back ?\nThe table below answers the question\nBased on what was noticed on the real bus when connecting PSA_WAVE2 ECU to CASTLE5 \nthe following behavior was concluded:\nUpon ECU power up, It requests EE-Programming -> write data to shadow registers.\nThe 20 bits are then transmitted to the sensor to be stored in memory as illustrated\nbelow:\nWhen the blind spot detection feature is activated the ECU then requests to read the\nstored data from the sensors.\nCASTLE5 firmware:\ncurrently, the user doesn't need to call anything from C5 firmware regarding this \nfeature.\nIt is implicitly implemented.\nFuture work:\nAs previously mentioned there are only two out of four functions implemented in \nC5.Hence, it is obvious that the future work in this topic would be to implement the\nmissing two functions i.e. \"Refresh shadow registers\" and \"Program EEPROM\"\nFirmware APIs shall be exposed to user in order to be able to write specific data in\nsensors memory and to be able to read them back.\nThis will create the capability to simulate EEPROM failures by corrupting its fields\nusing the APIs.", "type": "Document"}}