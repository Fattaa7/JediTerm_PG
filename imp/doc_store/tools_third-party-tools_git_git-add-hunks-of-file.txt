{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "tools_third-party-tools_git_git-add-hunks-of-file.txt"}, "page_content": "Git Add Hunks Of File\nUp until now, whenever we've added a file with \"git add\",  or dragged the file from \nthe \"unstaged\" window to the \"staged\" from Eclipse GUI,  it has taken the entire \nfile and added that into the index.However, it is possible to add only parts of a \nfile to the index. In Git, these are called hunks.A hunk is merely a set of changes \nto a file, involving lines added (those prefixed with +) and lines removed (those \nprefixed with -).I have discovered 2 ways to add only your preferred hunks to the \nstaging area, and keep other changes in the working directory.Navigate to the \nchanged module directory >> Rclick >> Git GUI HereYou will find a window \"modified, \nnot staged\" with all of your modifications.Highlight the ones you want to add to \nindex >> Stage Lines For Commit\nUp until now, whenever we've added a file with \"git add\",  or dragged the file from \nthe \"unstaged\" window to the \"staged\" from Eclipse GUI,  it has taken the entire \nfile and added that into the index.\nUp until now, whenever we've added a file with \"git add\",  or dragged the file from \nthe \"unstaged\" window to the \"staged\" from Eclipse GUI,  it has taken the entire \nfile and added that into the index.\nHowever, it is possible to add only parts of a file to the index. In Git, these are \ncalled hunks.\nHowever, it is possible to add only parts of a file to the index. In Git, these are \ncalled hunks.\nA hunk is merely a set of changes to a file, involving lines added (those prefixed \nwith +) and lines removed (those prefixed with -).\nA hunk is merely a set of changes to a file, involving lines added (those prefixed \nwith +) and lines removed (those prefixed with -).\nI have discovered 2 ways to add only your preferred hunks to the staging area, and \nkeep other changes in the working directory.\nI have discovered 2 ways to add only your preferred hunks to the staging area, and \nkeep other changes in the working directory.\nNavigate to the changed module directory >> Rclick >> Git GUI Here\nNavigate to the changed module directory >> Rclick >> Git GUI Here\nYou will find a window \"modified, not staged\" with all of your modifications.\nYou will find a window \"modified, not staged\" with all of your modifications.\nHighlight the ones you want to add to index >> Stage Lines For Commit\nHighlight the ones you want to add to index >> Stage Lines For Commit\nThe other way to add hunks of file to staging is done using git bash.Navigate to the\nchanged module directory >> Rclick >> Git Bash HereGit add --patch filenamePress e \nto manually edit the current hunk.Press i to navigate to bash insert mode.Edit your \nhunks by leaving the lines you want to add as they are, and delete the lines you do \nnot want to add.Save and close your insert session by hitting Escape , then typing \nthe following :wqEnter.\nThe other way to add hunks of file to staging is done using git bash.\nThe other way to add hunks of file to staging is done using git bash.\nNavigate to the changed module directory >> Rclick >> Git Bash Here\nNavigate to the changed module directory >> Rclick >> Git Bash Here\nGit add --patch filename\nGit add --patch filename\nPress e to manually edit the current hunk.\nPress e to manually edit the current hunk.\nPress i to navigate to bash insert mode.\nPress i to navigate to bash insert mode.\nEdit your hunks by leaving the lines you want to add as they are, and delete the \nlines you do not want to add.\nEdit your hunks by leaving the lines you want to add as they are, and delete the \nlines you do not want to add.\nSave and close your insert session by hitting Escape , then typing the following \n:wqEnter.\nSave and close your insert session by hitting Escape , then typing the following \n:wqEnter.", "type": "Document"}}