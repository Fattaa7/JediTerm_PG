{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_hardware-apis_product-lines-uls_generic_continuousintegrationsupportvs6onmultiplepimsracks.txt"}, "page_content": "[Continuous Integration] Support VS6 on multiple PIMs/Racks\nPost date: May 4, 2020 10:52:39 AM\nThe development of a new Castle 5 feature which enables the support forVS6on \nmultiple PIMs/Racks was done starting from thiscommit.\nIt was needed for the CI solution where aHILfarm is using multiple PIMs and Racks \nsimultaneously to execute different scenarios i.e. Parking scenarios.\nVS6is crucial for this kind of tests. As you may know its development and \nmaintenance is now in freeze, So to overcome this issue, a gateway was developed in \nCanoe to adapt theVS6CAN ids according to Castle's different PIM slots.\nKindly find below some guidelines for Castle5 developers and users:\nA. For Castle 5 developers :\n1. The attached .DBC file is now mandatory to be integrated in all firmware projects\nto avoid compilation errors\n2.\nThe above object must be included in your project's .C5C file ( the \"Name\" attribute\ncould be changed as you wish )\n3. By default the firmware will handle the legacy implementation which expects a set\nof CAN IDs fromVS6\nB. For Castle5 users:\n4. To enable the new feature you have to use the API \n\"UpaPcCanCom_ApiEnableVs6SupportForCI(1)\";\nThis will allow the firmware to detect the PIM's slot id and receive the \ncorrespondingVS6CAN Ids.\n5. A Canoe configuration which is simply a gateway to adapt theVS6CAN ids as \npreviously mentioned is under development and it must be used for the system to work\nproperly.\nN.B: For more information about the canoe configuration please refer to Sara Mostafa", "type": "Document"}}