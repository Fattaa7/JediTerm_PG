{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_hardware-apis_product-lines-cam_tutorials_fault-box-v1.txt"}, "page_content": "Fault-Box V1\nStarting fromthiscommit we have a new Fault-Box FW (FaultBox_V1)\nGeneral Guide\nFault-Box is a special Hardware designed to insert HW faults on camera lines. In \nFault-Box V1 we have 6 channels (4 camera + 1 video-out + 1 CAN). The firmware is \ndesigned in a way to prevent the user from inserting.\nCamera Faults\nEach camera has 4 lines, 2 power lines (Vcc+, Vcc-) and 2 data lines (Data+ and \nData-).There is a fault called ( NoFault ) this fault connects the power to the \ncamera. It is activated by default in the initialization by the firmware and the \nuser can remove/configure it anytime.\nEach camera has 4 lines, 2 power lines (Vcc+, Vcc-) and 2 data lines (Data+ and \nData-).\nEach camera has 4 lines, 2 power lines (Vcc+, Vcc-) and 2 data lines (Data+ and \nData-).\nThere is a fault called ( NoFault ) this fault connects the power to the camera. It \nis activated by default in the initialization by the firmware and the user can \nremove/configure it anytime.\nThere is a fault called ( NoFault ) this fault connects the power to the camera. It \nis activated by default in the initialization by the firmware and the user can \nremove/configure it anytime.\nCamera Power Faults\nBelow snapshot shows Camera Power faults made via the daughterboard\nBelow snapshot shows Camera Power faults made via the daughterboard\nBelow snapshot shows Camera Power faults made via the daughterboard\nBelow snapshot shows Camera Power faults made via the motherboard\nBelow snapshot shows Camera Power faults made via the motherboard\nBelow snapshot shows Camera Power faults made via the motherboard\nCamera Data Faults\nFaults on each data line is exclusive (i.e. user will not be able to insert two \nfault on the same line at the same time ).User can insert any two faults, one on \nData+ and the other one on Data-Example: inserting these two faults at the same time\nis OK (CamDataPlusShortVccandCamDataMinusShortGnd)CamDataPlusShortMinusis exclusive \nfault, it removes any other fault from both data lines. Note that in this case the \nfirmware keeps the old history of faults on Data+ and Data-\nFaults on each data line is exclusive (i.e. user will not be able to insert two \nfault on the same line at the same time ).\nFaults on each data line is exclusive (i.e. user will not be able to insert two \nfault on the same line at the same time ).\nUser can insert any two faults, one on Data+ and the other one on Data-Example: \ninserting these two faults at the same time is OK \n(CamDataPlusShortVccandCamDataMinusShortGnd)\nUser can insert any two faults, one on Data+ and the other one on Data-\nExample: inserting these two faults at the same time is OK \n(CamDataPlusShortVccandCamDataMinusShortGnd)\nExample: inserting these two faults at the same time is OK \n(CamDataPlusShortVccandCamDataMinusShortGnd)\nCamDataPlusShortMinusis exclusive fault, it removes any other fault from both data \nlines. Note that in this case the firmware keeps the old history of faults on Data+ \nand Data-\nCamDataPlusShortMinusis exclusive fault, it removes any other fault from both data \nlines. Note that in this case the firmware keeps the old history of faults on Data+ \nand Data-\nBelow Snapshot shows all how we create faults on camera data lines\nVideo-Out Faults\nWe have 7 video-out faults on two data lines (Data+ and Data-), they are the same as\nCamera Data Faults and follow the same procedure in implementation.\nFW Developer Guide\n1) In <Project>.C5C add below two lines in their correct locations\n<Includes>    .......     <Include xsi:type=\"Include\" \nPath=\"${CTE_CFG_DIR}/cameras_faultbox_v1.c5c\"/>    .......</Includes>\n<Objects>    <ObjectName=\"CamerasFaultBox\">  <Doc />    </Object></Objects>\n2) In prj_features.h add below lines\n#define FEATURE_CAM_FAULTBOX_V1\n3) In main.c add below lines (XPAR_SPI_FBOX_DEVICE_ID: device ID of the SPI device \nthat will be used to control the Fault-Box)\n#include \"cam/CamerasFaultBox.h\"    initFaultBox( XPAR_SPI_FBOX_DEVICE_ID );\nUser Guide\nWe have 5 APIs to be used by CASTLE user\nConfigureCameraFaultRemoveCameraFaultConfigureVideOutputFaultRemoveVideoOutputFaultC\nlearAllFaults\nConfigureCameraFault\nConfigureCameraFault\nRemoveCameraFault\nRemoveCameraFault\nConfigureVideOutputFault\nConfigureVideOutputFault\nRemoveVideoOutputFault\nRemoveVideoOutputFault\nClearAllFaults\nClearAllFaults\nExample:\nexu.modTS().objCamerasFaultBox().afcConfigureCameraFault( \nItfCamerasFaultBox.EnmCameraId.CAM_0,                                               \n            ItfCamerasFaultBox.EnmCameraFaultBoxMode.NoFault);", "type": "Document"}}