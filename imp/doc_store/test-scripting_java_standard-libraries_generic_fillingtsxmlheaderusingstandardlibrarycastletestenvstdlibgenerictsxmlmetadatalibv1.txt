{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_java_standard-libraries_generic_fillingtsxmlheaderusingstandardlibrarycastletestenvstdlibgenerictsxmlmetadatalibv1.txt"}, "page_content": "Filling Tsxml Header using Standard Library \ncastle.testenv.stdlib.generic.TsxmlMetaDataLibV1\nPost date: Apr 2, 2020 12:53:58 PM\nAfter runing tsxml based tests it is whished that at least the most important test \nruntime values are propperly filled into the header of the tsxmls.\nThe test runtime values are e.g. suposed to contain the software version under test \nand the SCM references and some further entries.\nthese entries can be filled either with own java library funtions by setting values \nfor the related keys \n(e.g.exu().getValues(ValuesScope.USER).getString(TestCardPropertys.PRJ_TESTSYSTMEM_I\nNFORMATION, \"my custom info\")) somewhere hardcoded and then calling the related \nfunction in as a preamble during the test runtime\nOR\nThere is the possibility to use a predefined library to do this (TsxmlMetaDataLibV1)\nwhich forwards the values simply from the CteSetup xml.\nin this case there is only the need to adjust some parameter for the library and the\nlibrary will extract the needed mandatory info that is available in the CTE and or \nSCM and the CteSetup.xml:", "type": "Document"}}