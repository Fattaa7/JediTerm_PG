{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "tools_third-party-tools_java_java-shutdown-hook.txt"}, "page_content": "Java Shutdown Hook\nThe JVM allows registering functions to run before it terminates.\nThese functions are usually a good place for releasing resources or other similar \nclean-up tasks. In JVM terminology, these functions are called shutdown hooks.\nWhen the JVM begins the shutdown process, it will start all registered hooks in an \nunspecified order. After running all hooks, the JVM will halt.\nThe hook is added using Runtime.getRuntime().addShutdownHook(...) and there you add \nthe shutdown hook thread\nThe output in case of no args:\nApplication Started\nHello World !\nApplication Ended Successfully\nExecuting Clean up Code ..\nDone\nThe output in case of any arg provided to the main\nApplication Started\nHello World !\nException in thread \"main\" java.lang.RuntimeException: This App takes no argument !\nat prj.cte.ShutdownHookExample.main(ShutdownHookExample.java:17)\nExecuting Clean up Code ..\nDone", "type": "Document"}}