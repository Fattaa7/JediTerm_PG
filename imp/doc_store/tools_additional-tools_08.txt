{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "tools_additional-tools_08.txt"}, "page_content": "tuto\nrials-and-usecase ---\n08 - Tutorials and Usecases\nUser Tutorials - for tools located in Main Tools baseline \n(csle:::CASTLE2:LM_SW_TEST_CASTLE_TOOLS_XXX)\nContent:\nHOW TO 13.01.2016: Check Requirements coverage on DOORS:\nHOW TO 14.12.2015: Visible extensions/changes in tools baseline 56:\nIDE 4.58: Clean executed tsxmls:\nIDE 4.58: Clean executed tsxmls:\nIDE 4.58: Standard HilParser now part of the tools baseline (no need to select the \none which comes with the firmware) - please use \"default tools\" setting\nIDE 4.58: Standard HilParser now part of the tools baseline (no need to select the \none which comes with the firmware) - please use \"default tools\" setting\nIDE 4.58: Improved search function in FlowControl:\nIDE 4.58: Improved search function in FlowControl:\nIDE 4.58: Improved search function in FlowControl:\nIDE 4.58: Multiple breakpoints, stop button and improved seach function in \nStepRunner/Debugging tab:\nIDE 4.58: Multiple breakpoints, stop button and improved seach function in \nStepRunner/Debugging tab:\nIDE 4.58: Multiple breakpoints, stop button and improved seach function in \nStepRunner/Debugging tab:\nIDETestClient 1.12 supporting now application parameter to be forwarded to the \nscripts running in SwTestIDE - DEFAULT CREDENTIALS EMBEDDED\nIDETestClient 1.12 supporting now application parameter to be forwarded to the \nscripts running in SwTestIDE - DEFAULT CREDENTIALS EMBEDDED\nIDETestClient 1.12 supporting now application parameter to be forwarded to the \nscripts running in SwTestIDE - DEFAULT CREDENTIALS EMBEDDED\nIDETestClient 1.12 enhanced commandline parser supporting special characters inside \nof the parameter values to be passed to IDE script and doing clean input validation \ne.g.:--ArgumentsScript \"PARAM1 = %%M\"M%%; PARAM2 = %%M;M%%;\"(target value of PARAM1 \nis M\"M -> one quote when used as string, target value of PARAM2 is M;M)\nIDETestClient 1.12 enhanced commandline parser supporting special characters inside \nof the parameter values to be passed to IDE script and doing clean input validation \ne.g.:\nIDETestClient 1.12 enhanced commandline parser supporting special characters inside \nof the parameter values to be passed to IDE script and doing clean input validation \ne.g.:\n--ArgumentsScript \"PARAM1 = %%M\"M%%; PARAM2 = %%M;M%%;\"\n--ArgumentsScript \"PARAM1 = %%M\"M%%; PARAM2 = %%M;M%%;\"\n(target value of PARAM1 is M\"M -> one quote when used as string, target value of \nPARAM2 is M;M)\n(target value of PARAM1 is M\"M -> one quote when used as string, target value of \nPARAM2 is M;M)\nHOW TO 14.12.2015: NightlyRun C3/C4 Projects (CDV SwTest) - using tools baseline \n>=56 (IDETestClient.exe >=1.12 && SwTestIDE.exe>=4.58 && NightlyRunTemplate.vb \n>=1.13)\nFull version cross check (Script version vs IDETestClient client version vs \nSwTestIDE version):\nFull version cross check (Script version vs IDETestClient client version vs \nSwTestIDE version):\nNo need for own credentials to be passed in the cmd call - call can e.g. look like \nthis:IDETestClient.exe^--ScriptPath\"Scripts\\NightlyRunTemplate.vb\"^--ArgumentsScript\n\"CMSSPRODUCTNAME=MBM;CMSSPROJECTNAME=AP_MBX_TESTMODEL_DEV;PROJECTIDECONFIG=MBH2_P2\\0\n2_Support\\Utilities\\SwTestIDE_MBH2_NightlyRun.xml;CSLEPRODUCTNAME=CASTLE4;CSLEPROJEC\nTNAME=AP_RAD_MBH_P2_DEV;\"^--ServerAppliction\"SwTestIDE.exe\"^--ForwardServerStdAndErr\norOut^--SuppressEchoREMARKS: Parameter inside of --ArgumentsScript will OVERWRITE \nthe APPLICATION PARAMETERS of the IDETestClientClient has now direct access to the \napplication settings object carrying e.g. CAN/hardware settings for all IDE \ninstances\nNo need for own credentials to be passed in the cmd call - call can e.g. look like \nthis:IDETestClient.exe^--ScriptPath\"Scripts\\NightlyRunTemplate.vb\"^--ArgumentsScript\n\"CMSSPRODUCTNAME=MBM;CMSSPROJECTNAME=AP_MBX_TESTMODEL_DEV;PROJECTIDECONFIG=MBH2_P2\\0\n2_Support\\Utilities\\SwTestIDE_MBH2_NightlyRun.xml;CSLEPRODUCTNAME=CASTLE4;CSLEPROJEC\nTNAME=AP_RAD_MBH_P2_DEV;\"^--ServerAppliction\"SwTestIDE.exe\"^--ForwardServerStdAndErr\norOut^--SuppressEchoREMARKS: Parameter inside of --ArgumentsScript will OVERWRITE \nthe APPLICATION PARAMETERS of the IDETestClient\nNo need for own credentials to be passed in the cmd call - call can e.g. look like \nthis:\nIDETestClient.exe^\nIDETestClient.exe^\n--ScriptPath\"Scripts\\NightlyRunTemplate.vb\"^\n--ScriptPath\"Scripts\\NightlyRunTemplate.vb\"^\n--ArgumentsScript\"CMSSPRODUCTNAME=MBM;CMSSPROJECTNAME=AP_MBX_TESTMODEL_DEV;PROJECTID\nECONFIG=MBH2_P2\\02_Support\\Utilities\\SwTestIDE_MBH2_NightlyRun.xml;CSLEPRODUCTNAME=C\nASTLE4;CSLEPROJECTNAME=AP_RAD_MBH_P2_DEV;\"^\n--ArgumentsScript\"CMSSPRODUCTNAME=MBM;CMSSPROJECTNAME=AP_MBX_TESTMODEL_DEV;PROJECTID\nECONFIG=MBH2_P2\\02_Support\\Utilities\\SwTestIDE_MBH2_NightlyRun.xml;CSLEPRODUCTNAME=C\nASTLE4;CSLEPROJECTNAME=AP_RAD_MBH_P2_DEV;\"^\n--ServerAppliction\"SwTestIDE.exe\"^\n--ServerAppliction\"SwTestIDE.exe\"^\n--ForwardServerStdAndErrorOut^\n--ForwardServerStdAndErrorOut^\n--SuppressEcho\n--SuppressEcho\nREMARKS: Parameter inside of --ArgumentsScript will OVERWRITE the APPLICATION \nPARAMETERS of the IDETestClient\nREMARKS: Parameter inside of --ArgumentsScript will OVERWRITE the APPLICATION \nPARAMETERS of the IDETestClient\nClient has now direct access to the application settings object carrying e.g. \nCAN/hardware settings for all IDE instances\nClient has now direct access to the application settings object carrying e.g. \nCAN/hardware settings for all IDE instances\nMultiple Bug fixes:\nMultiple Bug fixes:\nbase/Base.xml issue solved,\nbase/Base.xml issue solved,\ndefault db host to new linux server (DBANDHOST) almprod cda-alm.vnet.valeo.com:7600 \nmade this variable - to be optionally passed by the client> 1.9\ndefault db host to new linux server (DBANDHOST) almprod cda-alm.vnet.valeo.com:7600 \nmade this variable - to be optionally passed by the client> 1.9\nHOW TO 11.12.2015: Using extended tsxml test summary carrying trust level in [%] per\nrequirement:\nHow to configure in SwTestIDE:\nHow it looks like:\nHOW TO 29.09.2015: Generate known ENG08 VSDM complient report in 2 steps  (C5 \nprojects - intermediate solution):\nStep 1 (read in all test groups of the project):\nStep 2 (select the test groups that should be part of the report and run the \"Post \nprocess C5\" user code):\nHOW TO 29.09.2015: Defect tracking proposal (over multiple regression test loops) \nusing generated tsxml statistic SwTestIDE 4.56:\nHOW TO 23.09.2015: NightlyRun C3/C4 Projects (CDV SwTest) - using tools baseline \n>=55 (IDETestClient.exe >=1.6 && SwTestIDE.exe>=4.55 && NightlyRunTemplate.vb >=1.5)\nNEW IMPROVEMENTS + FIX for CASTLE2_VDR_434 \"Make the C3/C4 nightly run solution more\nrobust ROUND2\":\nVN89xxx execution CASTLE FLASHER (-XlDriverLibrary integration of XLDriverLib 8.3 \nisdoneFlashing problem because the configuration taken from the xml not from the \nmachine specific configdoneModification of the reportdoneRun over not existing test \ngroupsdoneWrite the SW baseline number to the reportdoneCrash in execution because \nof Base/base problemdoneUpdated DimensionsAPI.jar does sometimes not give propper \nerror reportingdone\nVN89xxx execution CASTLE FLASHER (-XlDriverLibrary integration of XLDriverLib 8.3 \nisdone\nVN89xxx execution CASTLE FLASHER (-XlDriverLibrary integration of XLDriverLib 8.3 \nisdone\nFlashing problem because the configuration taken from the xml not from the machine \nspecific configdone\nFlashing problem because the configuration taken from the xml not from the machine \nspecific configdone\nModification of the reportdone\nModification of the reportdone\nRun over not existing test groupsdone\nRun over not existing test groupsdone\nWrite the SW baseline number to the reportdone\nWrite the SW baseline number to the reportdone\nCrash in execution because of Base/base problemdone\nCrash in execution because of Base/base problemdone\nUpdated DimensionsAPI.jar does sometimes not give propper error reportingdone\nUpdated DimensionsAPI.jar does sometimes not give propper error reportingdone\nDimensionsAPI.jar not allowing \"check in\" commentsdoneVarious possible popups of the\nSwTestIDE were preventing complete run under certain circumstancesdone\nDimensionsAPI.jar not allowing \"check in\" commentsdone\nVarious possible popups of the SwTestIDE were preventing complete run under certain \ncircumstancesdone\nVarious possible popups of the SwTestIDE were preventing complete run under certain \ncircumstancesdone\nWorking with IDETestClient.exe >= version 1.6:\nMain changes in relation to version 1.5:\nImproved std out and std error stream forwarding from server applicationCompilation \nerrors in the script to run are marked now with the line numbersFixed several bugs \nin handling of the commandline argumentsProvide syntax highliting and basic code \neditor features (Strg+H/Strg+F/Strg+S)\nImproved std out and std error stream forwarding from server application\nImproved std out and std error stream forwarding from server application\nCompilation errors in the script to run are marked now with the line numbers\nCompilation errors in the script to run are marked now with the line numbers\nFixed several bugs in handling of the commandline arguments\nFixed several bugs in handling of the commandline arguments\nProvide syntax highliting and basic code editor features (Strg+H/Strg+F/Strg+S)\nProvide syntax highliting and basic code editor features (Strg+H/Strg+F/Strg+S)\nWorking with NightlyRunTemplate.vb >= version 1.5:\nMain changes in relation to script in baseline 54:\nAdded error handling for various cases\nAdded error handling for various cases\nPrepared section to flash the DUTs\nPrepared section to flash the DUTs\nInject DUT software baseline information into the report using optional argument\nInject DUT software baseline information into the report using optional argument\nMerged script to run MsWord based tests with NightlyRunTemplate.vb ->SINGLE SCRIPT \nhandles now both\nMerged script to run MsWord based tests with NightlyRunTemplate.vb ->SINGLE SCRIPT \nhandles now both\nAdded a version checks for script and server application (SwTestIDE) that executes \nthe test\nAdded a version checks for script and server application (SwTestIDE) that executes \nthe test\nAdded option to zip reports\nAdded option to zip reports\nAdded multiple optional commandline swiches that can be passed through the \nIDETestclient to the script (see table below)\nAdded multiple optional commandline swiches that can be passed through the \nIDETestclient to the script (see table below)\nTsxml summary table carries now reqirement statistic to observe the actual amout of \nvalidated, tested and failed requirements:\nHow to configure in SwTestIDE:\nHow the have a quick look at the requirements for one or more groups in test group \nproperty dialog:\nHow the output now looks like (as .xls or .html for Jenkins):\nHOW TO 10.07.2015: NightlyRun C3/C4 Projects (CDV SwTest) - using tools baseline \n>=54 (IDETestClient.exe >=1.4 && SwTestIDE.exe>=4.54)\nNEW IMPROVEMENTS + FIX for CASTLE2_VDR_413:\n1.) Fixed problems that could appear in relation to spaces in any Dimensions paths\n2.) Console output of server application (SwTestIDE), client (TestIDEClient.exe) and\nNightlyRun script (NightlyRun.vb) now shown at runtime in Jenkins\n3.) Server appllicationcreating now html report including regression history and \nlinking down to HilParser htmls\n4.) Cmd arguments can now be passed through client to server application (e.g. \nhiding the UI...to run in background)\n5.) All used credentials not hidden in logging\n6.) Added new optional arguments in the NightlyRunTemplate.vb to forward \n%JENKINSWORKSPACE% or overwrite %NIGHTLYRUNWORKSPACE%\n7.) Reworked script preprocessing in TestIDEClient to provide direct feedback in \nconsole in terms of return code \"InputError\"\n8.) Further preparison to run the setup also for C5 projects - using CTE as \nexecution engine\n9.) ...\nSample to demonstrate usage of Jenkins and SwTestIDE:\nHOW TO 01.07.2015: NightlyRun C3/C4 Projects (CDV SwTest) - using tools baseline \n>=53 (IDETestClient.exe >=1.3 && SwTestIDE.exe>=4.50)\nNEW IMPROVEMENT:\nNeeded specific configuration (passed in the commandline call from Jenkins) is now \njust:\n1.) Dimensions credentials\n2.) Location of SwTestIDE project config on database\nMultiple server application instances can be handled now\nSample: using the scripts out of the BL53:\nHOW TO 09.06.2015: Coupling VS6 with TSECG - Master Thesis\nSome ideas about how to achieve that. Discussion points or qusetions can be added to\nthe relatedCCB document\nHOW TO 01.04.2015: Use Case Video SwTestDesigner:\nHOW TO 30.03.2015: Enable optional zip report package in SwTestIDE >=4.40 (BL50):\nNavigate to: Configuration->Functions:\nNavigate to: Configuration->Functions:\nNavigate to: Configuration->Functions:\nEnable in the step for html generation the checkbox \"LowLevel\" / \"Zip\"\nEnable in the step for html generation the checkbox \"LowLevel\" / \"Zip\"\nThe option \"LowLevel\" will copy the Hilparser htmls into the HTMLs folder under \ndirectory \"LowLevel\" each time if the gerneration of html reports has been \ntriggered.\nThe option \"Zip\" will additionally zip the hilparser reports.\nRemarks: The links in the \"highlevel\" ENG08 like reports are pointing to the \nLowlevel reports inside of the \"LowLevel\" directory if the related option is set. If\nthe reports are zipped the link will not directly work.\nThe \"LowLevel\" directoryneeds to be manually unzipped.\nA resulting report Directory may look like this:\nHOW TO 30.03.2015: Use the latest version of tsxml summary generator >=4.36 (BL49):\nThe tsxml Statistic generator in SwTestIDE can be started with this button:\nin \"FlowControl\" view.\nThe configuration of the gererator can be done under: \nConfiguration->SpecWriter->Statistic function tab.\nThe generator produces Excel tables allowing to see trends over several regression \ntest loops.\nEach set of columns is representing the over all status of a regression loop. The \ntable can be continously updated by SwTestIDE.\nRemarks: The header row is composed out of the user, the time and the baseline which\nwasd tested for that particular loop. The related baseline shall be entered in the \nconfiguration:\nSample table beeing generated with SwTestIDE BL 49:\nHOW TO 12.01.2015: Run SwTestIDE plugin dlls \"stand allone\" remotly triggered by \nusing  IDETestClient.exe (>=1.1.0.0 - BL 49) and SwTestIDE (>=4.36.0.0 - BL 49)\nA usecase for this might be ParkMan project (using bluetooth plugin with C5)\nUsed Sample Script:\nCompileAndRunCode(\"\n'This script requires locally running SwTestIDE >=4.36.0.0, with loaded \nconfiguration containing configuration for BluetoothClientPlugin.dll listening at \nthe configured port\n'This script can be passed to IDETestClient >= 1.1.0.0 using argument -i\n'This funtion can load any registered plugin dll and register an eventhandler\n'located inside of the dll that gets called triggered by any CASTLE event\n'This sample call listens to the allive messages of a PIM at slot 1 (0x301=769)\n'The function takes the following parameter:\n'1. DLL Name\n'2. EventMask - to determine which events have to be forwarded to the handler inside\nof the dll\n'3. EventType - to determine which events have to be forwarded to the handler inside\nof the dll\n'        TPRunnertoPIM = 0\n'        TPPIMtoRunner = 1\n'        TPCustomtoPC = 2\n'        Other = 3\n'4  CAN identifier to listen\n'5  CAN identifier to be used by the plugin to response\nLoadDllAndRegisterEventHandler(\"BluetoothClientPlugin.dll\",\"FF\",3,769,1793)\n'Wait a little bit to demonstrate what happens in case of incomming events\nThread.Sleep(5000)\n'This function deregisters/stopps the event handling\nDeRegisterEventHandler(\"BluetoothClientPlugin.dll\")\nreturn \"Listened 5 seconds to CAN id 0x301\"\n\")\nSample:\n(remarks - the client has been started with argument -g to enable the GUI)\nHOW TO 09.01.2015: Interact with CI plugin by using IDETestClient.exe (>=1.1.0.0 - \nBL 49) and SwTestIDE (>=4.36.0.0 - BL 49)\nThisbatchrequires locally running SwTestIDE >=4.36.0.0 with registered CI.dll, \nlistening at port 3232 and IDETestClient >= 1.1.0.0\nIt is a sample how to access/configure the CI Plugin from commandline using \nIDETestClient.exe through SwTestIDE background server\nRemarks: For all other SwTestIDE plugins this procedure is not necessary because the\nproject configuration gets also distributed to the plugins\nSample:\nHOW TO 09.01.2015: Automatize test runs (e.g. for \"Nightly Tests\" triggered out of \nJenkins) by using IDETestClient.exe (>=1.1.0.0 - BL 49) and SwTestIDE (>=4.36.0.0 - \nBL 49)\nScript to load SwTestIDE project, flash CASTLE, run a test and create report\nSteps to use it:\n1.Make sure that you have a working SwTestIDE project configuration with at least \none testgroup available and everything is setup to run the testgroup using the usual\nGUI\n2.Download the script above and adapt the locations of the test group and project \nconfiguration.\n3.Start an instance of SwTestIDEout of the bl >= 49via batch or manually(Remarks: \nthe client will at the moment always connect to the first instance of SwTestIDE)\n4.Call the IDETestClient.exe with at least argument -i \"SCRIPTPATH\"\nThe result should look like this:\nHOW TO 08.01.2015: Use IDETestClient.exe (>=1.1.0.0) in comandline mode (without -g)\nto do remote test runs:\nThe IDETestClient.exe is a tool able to connect to SwTestIDE using a socket \nconnection. The tool is located at the assembly folder of the SwTestIDE.\nThe client is e.g. able to:\nRead Visual Basic source code out of a given file and forward it to the background \nserver of SwTestIDE. The background server of SwTestIDE will compile that code and \nrun it.\nSo one use case for the tool is to automatize actions that are usually done by the \nuser who is interacting with the GUI of SwTestIDE or its plugin GUIs. This might \ninclude \"Nightly Testruns\" triggered out of batch files\nThe following picture shows the possible commandline arguments of the tool:\nThe tool is supporting the following return codes (starting from 0):\nThe communication flow between SwTestIDE background server and the client can be \nobserved in the \"IDE ServerCommunication\" window of SwTestIDE\nHOW TO 02.12.2014: Use AnalyseReportC5.exe V1 in combination with CastleView V24 out\nof main tools baseline >=48 as replacement for the current ReportReader\nNew Features (1):\n- Singltone application per application path\n- NO configuration necessary - just double click .tsxml files (CastleView V24 out of\nbaseline referenced by default)\n- Open multiple testspec folders\nUsing AnalyseReportC5 V1 as replacement to the ReportReader in combination with \nSwTestIDE - related to\nNew Features (2):\n- Accessible and runnable as plugin using SwTestIDE\n- Possibility to share configuration with SwTestIDE\nHOW TO 30.10.2014: Use AnalyseReportC5.exe out of the main tools baseline (>46) for \npost processing to merge CTE testresults with .tsxml files and generate VSDM ENG08 \ncompliant SwTest reports\nUsing the tool with GUI:\nUsing the tool on cmd mode without GUI:\nHOW TO 10.02.2014: How to execute two tests in parallel on two PIMs with CASTLE : \nSwTest IDE, hardware and macros configuration (version 1)\n1. Sw Test IDE configuration:\nThe following text is a summary of the related video tutorial which can be found \nbelow, on this page:\n1.1In SwTestIDE, load a project configuration which is working with one PIM.\n1.2. Go to the menu Edit -> Configuration -> Hardware Settings ->Check the box \ncalled \"Multi PIM Mode\"; then click OK to close the configuration window.\n1.3. Go to the menu Edit -> Edit current project configuration xml file\nAn xml file will open, which contains notably the execution properties of all the \ntestgroups from the project. Every testgroup is associated to a field PIMToRun, \nindicating on which PIM the testgroup will execute : for example \n<PIMToRun>1</PIMToRun> means that the testgroup will be executed on PIM 1. For one \nof the testgroups (it does not matter which one), modify the PIM number in order to \nmatch it to the second PIM : <PIMToRun>1</PIMToRun> becomes<PIMToRun>2</PIMToRun>.\nSave the xml file : instead of having only one tab called Flow Control (PIM1), you \nhave now two tabs Flow Control (PIM1) and Flow Control (PIM2). You can switch the \ntestgroups between the two PIMs by doing a simple Drag and Drop of the testgroups \n(for example drag and drop from the tab Flow Control (PIM1) to the tab Flow Control \n(PIM2)).\n2. Hardware Configuration\n3. Library macros modifications\nMake sure that the DC supply voltage is set within the application's working voltage\nrange when the library function for turning on the supply voltage of the ECU is \ncalled. For VW Application, the function used to set this voltage is : \nPowerSupply_Set_V(Set_Vnumerical_value_volts), which definition is present in \nTest_Bench_Library.txt.\n3.1At the very beginning of the function Spannungsversorgung_einschalten in \nMain_Library_TSECG.txt, make sure that the following function is called:\nPowerSupply_Set_V(Set_V 1) :indeed, the ECU must be powered after powering CASTLE.\nIt should start at t = 0ms and all the following functions called in \nSpannungsversorgung_einschalten should be delayed with100ms(with a power supply of \ntype 8952) or1000ms(with a power supply of type PN300), in order to let time to the \nDC Power Supply to adapt the voltage to 1V.\n3.2Still inside the function Spannungsversorgung_einschalten in \nMain_Library_TSECG.txt, after the call of the functions turning Klemme_15 and \nKlemme_30 on, make sure that the following function is called:\nPowerSupply_Set_V(Set_V 12)\nIt should start 15 ms after the previous function (which turns Klemme_15 or \nKlemme_30 on), and all the following functions called in \nSpannungsversorgung_einschalten should be delayed with100ms(with a power supply of \ntype 8952) or1000ms(with a power supply of type PN300), in order to let time to the \nDC Power Supply to adapt the voltage to 12V.\n3.3At the very end of the function Zuendung_aus_ (the one which is linked to the \ndatabase function Pr\u00fcfstand zur\u00fccksetzen) in Main_Library_TSECG.txt, make sure that \nthe following function is called:\nPowerSupply_Set_V(Set_V 1)\n(the value 0 instead of 1 would be an out of range parameter).\n4. Divide and execute the Testgroups\nWith this configuration, PIM1 can control the supply voltage, it is supplied by the \nDC Power Supply. PIM2 can not control the supply voltage, it is supplied with a \nconstant 12V DC input.\nTherefore, the rule for the testgroup division between the two PIMs is that, all the\ntestgroups which use functions controlling the PW Supply / generating \nshortcutsMUSTbe executed on PIM1 (the PIM which can control the supply voltage).\nA column is present in the VW Application Testgroups document, in order to list the \ntestgroups which are controlling the PW Supply / generating shortcuts, and the ones \nwhich do \nnot.https://docs.google.com/a/valeo.com/spreadsheet/ccc?key=0AnVI4Jl7WbJtdDNTalRsYy1\n2TFRCamRqTWNya2tnT1E&usp=drive_web#gid=0\nHOW TO 02.10.2013: Configure the SwTestIDE in \"DOC and SPEC folder mode\" and how to \narrange the items in Dimensions the best way to avoid copying manually some files \nafter downloading them.\nFeasable for TSECG/tsxml and Microsoft Word test specification.\nHOW TO 26.07.2013: Use the SwTestIDE plugin system to load external .net Dynamic \nLink Libraries (dlls) written in C++, C# or VB.net. and handle events which occured \non the CASTLE CAN\nA usecase for that can be e.g:\nWork with \"Virtual PIMs\" on PC side - to handle difficult, calculation intensive or \nframework external things (e.g. video streaming to the DUT, stream comparing \nsupported by opencv or triggering external (P2 - development) applications)\nThe \"Virtual PIM\" or Plugin DLL is working in this case as a slave of the host PIM \nruinning in HIL mode.\nThe IDE framework is already providing basic operations like CAN intercaction. The \nPlugin may also use the COM server to interact with IDE.\nThe general idea behind is: Splitting up the responsability for the IDE development \ninto several smaller but highly specialized, dedicated plugin packages.\nRemarks:\nThis feature can be combined with a CASTLE firmware which is implementing a router \nfunctionality to route commands out of the HIL mode to a 2nd TP on CASTLE CAN to \nimprove the information exchange between a running HIL test and the dedicated \nplugin.\nSee alsoIDE Plugin Systemand presentation.\nHOW TO 25.07.2013:  Use \"Event Scripts\" in SwTestIDE >=4.3\nExecute test groups with attached event scripts:\nHOW TO 1.02.2013:  Open this site in the IDE ReportReader view.\nComment: in case of doing this the first time it requires that you enter your valeo \naccount data. - Feel free to add your own hints and requirements to this site. For \nquestions please contact Markus Kr\u00e4nkel (markus.kraenkel@valeo.com+4971429161901)\nHOW TO 31.01.2013:  Do multiple test loops until a test group has the status NOK / \nOK. (IDE>=3.13)\nSample script that is used in this HOW TO\nHOW TO 15.01.2013:  Do multiple test loops and copy their results - using IDE COM \nserver and CSI\nSample script that is used in this HOW TO\nHOW TO 15.01.2013:\nUse Plugin Feature to embed and configure multiple external applications and include\ntheir GUI into SwTestIDE >=3.10\nHOW TO 15.01.2013:  Enable Multi PIM Mode of SwTestIDE to control multiple test runs\non multiple PIMs\nHOW TO 15.01.2013:  Remote control the IDE using IDETestClient.exe\nHOW TO 15.01.2013: Use IDETestClient.exe to schedule tests for multiple different \nprojects SwTestIDE >= 3.11\nSample script that is used in this HOW TO", "type": "Document"}}