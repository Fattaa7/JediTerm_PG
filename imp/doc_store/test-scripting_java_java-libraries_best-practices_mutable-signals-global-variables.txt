{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "test-scripting_java_java-libraries_best-practices_mutable-signals-global-variables.txt"}, "page_content": "Global Variables based onMutable Signals\nA new feature added to CASTLE starting from Generic Firmware Release 1.2.0 and CRE \nRelease 2.12.0.\nIt's implemented to mimic the global variables in CAPL to change the behaviour of \nCastle based on global variables between bench and PC\nCastle system equipped with a pool of 512 global variables ready to be used\nYou can create a new value global variable by calling:GlobalVariable \ngetOrCreate(String name, EncodedType type)\nYou can create a new raw variable by calling:GlobalVariable getOrCreate(String name,\nint byteLength)\nYou can delete the created global variable by calling:void delete(GlobalVariable \nvar)\nprivate config.impl.Imp_Signal getSignal(GlobalVariable var) {\nASignal sig = var.getSignal();\nreturn (config.impl.Imp_Signal)sig;\n}\n@ILibExport\npublic voidtestConfigurableSignalUint16() {\nGlobalVariable var = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"CameraOneComp\", \nEncodedType.UINT16));\nconfig.impl.Imp_Signal sig = getSignal(var);\nsig.afcSet(0xAAEE);\nsig.afcGet();\nexu.pause(100);\nObjects.getGlobalVariables(exu).delete(var);\n}\n@ILibExport\npublic voidtestConfigurableSignalRaw() {\nGlobalVariable var = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"CameraPixels\", 1500));\nconfig.impl.Imp_Signal sig = getSignal(var);\nsig.afcSet(\"01 02 03\");\nsig.afcGet();\nexu.pause(100);\nObjects.getGlobalVariables(exu).delete(var);\n}\n@ILibExport\npublic voidtestConfigurableSignalUint32() {\nGlobalVariable var = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"CameraAllComp\", \nEncodedType.UINT32));\nconfig.impl.Imp_Signal sig = getSignal(var);\nsig.afcSet(0xBBCCDD);\nsig.afcGet();\nexu.pause(100);\nObjects.getGlobalVariables(exu).delete(var);\n}\n@ILibExport\npublic voidtestConfigurableSignalFollowing() {\nGlobalVariable var1 = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"SourceSignal\", \nEncodedType.UINT32));\nconfig.impl.Imp_Signal sig1 = getSignal(var1);\nGlobalVariable var2 = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"DestSignal\", \nEncodedType.UINT32));\nconfig.impl.Imp_Signal sig2 = getSignal(var2);\nexu.bindEventToReceiver( sig1.evtValueChange(),  sig2.rcvFollowing() );\nsig1.afcSet(0xBBCCDD);\nsig1.afcGet();\nsig2.afcGet();\nexu.pause(100);\nObjects.getGlobalVariables(exu).delete(var1);\nObjects.getGlobalVariables(exu).delete(var2);\n}\n@ILibExport\npublic voidtestConfigurableCreateDelete() {\nGlobalVariable var1 = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"Var1\", \nEncodedType.UINT32)); // Index 0\nGlobalVariable var2 = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"Var2\", \nEncodedType.UINT32)); // Index 1\nGlobalVariable var3 = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"Var3\", \nEncodedType.UINT32)); // Index 2\nObjects.getGlobalVariables(exu).delete(var2); // Index 1\nGlobalVariable var4 = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"Var4\", \nEncodedType.UINT32)); // Index 1\nGlobalVariable var5 = \nAssert.isNotNull(Objects.getGlobalVariables(exu).getOrCreate(\"Var5\", \nEncodedType.UINT32)); // Index 3\nObjects.getGlobalVariables(exu).delete(var1); // Index 0\nObjects.getGlobalVariables(exu).delete(var5); // Index 3\nObjects.getGlobalVariables(exu).delete(var3); // Index 2\nObjects.getGlobalVariables(exu).delete(var4); // Index 1\n}\nThe log is updated in both CTE log and Castle View", "type": "Document"}}